/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'pi'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct std::ios_baseVtbl;
struct std::ios_base::_Iosarray;
struct std::ios_base::_Fnarray;
struct std::locale::facetVtbl;
struct std::locale;
struct std::basic_streambuf<char,std::char_traits<char> >Vtbl;
struct _s__RTTIClassHierarchyDescriptor;
struct std::_Container_base12;
struct std::_Iterator_base12;
struct std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >Vtbl;
struct std::exceptionVtbl;
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl;
struct std::error_categoryVtbl;
struct type_infoVtbl;
struct _TEB_ACTIVE_FRAME_CONTEXT;
struct EnumVtbl;
struct DbgVtbl;
struct TPIVtbl;
struct ModVtbl;
struct GSIVtbl;
struct DBIVtbl;
struct StreamVtbl;
struct SrcVtbl;
struct PDBVtbl;
struct IPDBErrorVtbl;

/* 1 */
enum std::float_denorm_style
{
  denorm_indeterminate = 0xFFFFFFFF,
  denorm_absent = 0x0,
  denorm_present = 0x1,
};

/* 2 */
enum std::float_round_style
{
  round_indeterminate = 0xFFFFFFFF,
  round_toward_zero = 0x0,
  round_to_nearest = 0x1,
  round_toward_infinity = 0x2,
  round_toward_neg_infinity = 0x3,
};

/* 3 */
enum std::io_errc::io_errc
{
  stream = 0x1,
};

/* 4 */
enum std::_Uninitialized
{
  _Noinit = 0x0,
};

/* 5 */
enum vc_attributes::YesNoMaybe
{
  No = 0xFFF0001,
  Maybe = 0xFFF0010,
  Yes = 0xFFF0100,
};

/* 6 */
enum vc_attributes::AccessType
{
  NoAccess = 0x0,
  Read = 0x1,
  Write = 0x2,
  ReadWrite = 0x3,
};

/* 7 */
enum $9E02737228DF5060E759F32703142FF5
{
  _BUF_SIZE = 0x8,
};

/* 8 */
enum $B2FB91FA9CC7CF3BD50434AFDECAC47F
{
  _ALLOC_MASK = 0x7,
};

/* 9 */
enum std::errc::errc
{
  address_family_not_supported = 0x66,
  address_in_use = 0x64,
  address_not_available = 0x65,
  already_connected = 0x71,
  argument_list_too_long = 0x7,
  argument_out_of_domain = 0x21,
  bad_address = 0xE,
  bad_file_descriptor = 0x9,
  bad_message = 0x68,
  broken_pipe = 0x20,
  connection_aborted = 0x6A,
  connection_already_in_progress = 0x67,
  connection_refused = 0x6B,
  connection_reset = 0x6C,
  cross_device_link = 0x12,
  destination_address_required = 0x6D,
  device_or_resource_busy = 0x10,
  directory_not_empty = 0x29,
  executable_format_error = 0x8,
  file_exists = 0x11,
  file_too_large = 0x1B,
  filename_too_long = 0x26,
  function_not_supported = 0x28,
  host_unreachable = 0x6E,
  identifier_removed = 0x6F,
  illegal_byte_sequence = 0x2A,
  inappropriate_io_control_operation = 0x19,
  interrupted = 0x4,
  invalid_argument = 0x16,
  invalid_seek = 0x1D,
  io_error = 0x5,
  is_a_directory = 0x15,
  message_size = 0x73,
  network_down = 0x74,
  network_reset = 0x75,
  network_unreachable = 0x76,
  no_buffer_space = 0x77,
  no_child_process = 0xA,
  no_link = 0x79,
  no_lock_available = 0x27,
  no_message_available = 0x78,
  no_message = 0x7A,
  no_protocol_option = 0x7B,
  no_space_on_device = 0x1C,
  no_stream_resources = 0x7C,
  no_such_device_or_address = 0x6,
  no_such_device = 0x13,
  no_such_file_or_directory = 0x2,
  no_such_process = 0x3,
  not_a_directory = 0x14,
  not_a_socket = 0x80,
  not_a_stream = 0x7D,
  not_connected = 0x7E,
  not_enough_memory = 0xC,
  not_supported = 0x81,
  operation_canceled = 0x69,
  operation_in_progress = 0x70,
  operation_not_permitted = 0x1,
  operation_not_supported = 0x82,
  operation_would_block = 0x8C,
  owner_dead = 0x85,
  permission_denied = 0xD,
  protocol_error = 0x86,
  protocol_not_supported = 0x87,
  read_only_file_system = 0x1E,
  resource_deadlock_would_occur = 0x24,
  resource_unavailable_try_again = 0xB,
  result_out_of_range = 0x22,
  state_not_recoverable = 0x7F,
  stream_timeout = 0x89,
  text_file_busy = 0x8B,
  timed_out = 0x8A,
  too_many_files_open_in_system = 0x17,
  too_many_files_open = 0x18,
  too_many_links = 0x1F,
  too_many_synbolic_link_levels = 0x72,
  value_too_large = 0x84,
  wrong_protocol_type = 0x88,
};

/* 10 */
enum $C7A66656BD20095141AF9DA597C58E36
{
  ok = 0x0,
  partial = 0x1,
  error = 0x2,
  noconv = 0x3,
};

/* 11 */
typedef $9E02737228DF5060E759F32703142FF5 $F0551E099AE6F36F41F19B6664DCAFD9;

/* 12 */
typedef $B2FB91FA9CC7CF3BD50434AFDECAC47F $8B51C3C74DF083A54E50CA72E34056B8;

/* 13 */
enum std::_Iosb<int>::_Dummy_enum
{
  _Dummy_enum_val = 0x1,
};

/* 14 */
enum std::_Iosb<int>::_Fmtflags
{
  _Fmtmask = 0xFFFF,
  _Fmtzero = 0x0,
};

/* 15 */
enum std::_Iosb<int>::_Iostate
{
  _Statmask = 0x17,
};

/* 16 */
enum std::_Iosb<int>::_Openmode
{
  _Openmask = 0xFF,
};

/* 17 */
enum std::_Iosb<int>::_Seekdir
{
  _Seekmask = 0x3,
};

/* 18 */
enum $0AE1ED1D395576D0F5C137E464D7BFE0
{
  _Openprot = 0x40,
};

/* 19 */
enum $3065823E5191D2C998FA93C46B23A3F9
{
  alnum = 0x107,
  alpha = 0x103,
  cntrl = 0x20,
  digit = 0x4,
  graph = 0x117,
  lower = 0x2,
  print = 0x1D7,
  punct = 0x10,
  space = 0x48,
  upper = 0x1,
  xdigit = 0x80,
};

/* 20 */
enum std::ios_base::event
{
  erase_event = 0x0,
  imbue_event = 0x1,
  copyfmt_event = 0x2,
};

/* 21 */
enum SA_AttrTarget
{
  SA_All = 0xFFFF,
  SA_Assembly = 0x1,
  SA_Class = 0x4,
  SA_Constructor = 0x20,
  SA_Delegate = 0x1000,
  SA_Enum = 0x10,
  SA_Event = 0x200,
  SA_Field = 0x100,
  SA_GenericParameter = 0x4000,
  SA_Interface = 0x400,
  SA_Method = 0x40,
  SA_Module = 0x2,
  SA_Parameter = 0x800,
  SA_Property = 0x80,
  SA_ReturnValue = 0x2000,
  SA_Struct = 0x8,
  SA_This = 0x8000,
};

/* 22 */
enum __enative_startup_state
{
  __uninitialized = 0x0,
  __initializing = 0x1,
  __initialized = 0x2,
};

/* 23 */
enum _NT_PRODUCT_TYPE
{
  NtProductWinNt = 0x1,
  NtProductLanManNt = 0x2,
  NtProductServer = 0x3,
};

/* 24 */
enum _ALTERNATIVE_ARCHITECTURE_TYPE
{
  StandardDesign = 0x0,
  NEC98x86 = 0x1,
  EndAlternatives = 0x2,
};

/* 25 */
enum _RTC_ErrorNumber
{
  _RTC_CHKSTK = 0x0,
  _RTC_CVRT_LOSS_INFO = 0x1,
  _RTC_CORRUPT_STACK = 0x2,
  _RTC_UNINIT_LOCAL_USE = 0x3,
  _RTC_CORRUPTED_ALLOCA = 0x4,
  _RTC_ILLEGAL = 0x5,
};

/* 26 */
enum SYM_ENUM_e
{
  S_COMPILE = 0x1,
  S_REGISTER_16t = 0x2,
  S_CONSTANT_16t = 0x3,
  S_UDT_16t = 0x4,
  S_SSEARCH = 0x5,
  S_END = 0x6,
  S_SKIP = 0x7,
  S_CVRESERVE = 0x8,
  S_OBJNAME_ST = 0x9,
  S_ENDARG = 0xA,
  S_COBOLUDT_16t = 0xB,
  S_MANYREG_16t = 0xC,
  S_RETURN = 0xD,
  S_ENTRYTHIS = 0xE,
  S_BPREL16 = 0x100,
  S_LDATA16 = 0x101,
  S_GDATA16 = 0x102,
  S_PUB16 = 0x103,
  S_LPROC16 = 0x104,
  S_GPROC16 = 0x105,
  S_THUNK16 = 0x106,
  S_BLOCK16 = 0x107,
  S_WITH16 = 0x108,
  S_LABEL16 = 0x109,
  S_CEXMODEL16 = 0x10A,
  S_VFTABLE16 = 0x10B,
  S_REGREL16 = 0x10C,
  S_BPREL32_16t = 0x200,
  S_LDATA32_16t = 0x201,
  S_GDATA32_16t = 0x202,
  S_PUB32_16t = 0x203,
  S_LPROC32_16t = 0x204,
  S_GPROC32_16t = 0x205,
  S_THUNK32_ST = 0x206,
  S_BLOCK32_ST = 0x207,
  S_WITH32_ST = 0x208,
  S_LABEL32_ST = 0x209,
  S_CEXMODEL32 = 0x20A,
  S_VFTABLE32_16t = 0x20B,
  S_REGREL32_16t = 0x20C,
  S_LTHREAD32_16t = 0x20D,
  S_GTHREAD32_16t = 0x20E,
  S_SLINK32 = 0x20F,
  S_LPROCMIPS_16t = 0x300,
  S_GPROCMIPS_16t = 0x301,
  S_PROCREF_ST = 0x400,
  S_DATAREF_ST = 0x401,
  S_ALIGN = 0x402,
  S_LPROCREF_ST = 0x403,
  S_OEM = 0x404,
  S_TI16_MAX = 0x1000,
  S_REGISTER_ST = 0x1001,
  S_CONSTANT_ST = 0x1002,
  S_UDT_ST = 0x1003,
  S_COBOLUDT_ST = 0x1004,
  S_MANYREG_ST = 0x1005,
  S_BPREL32_ST = 0x1006,
  S_LDATA32_ST = 0x1007,
  S_GDATA32_ST = 0x1008,
  S_PUB32_ST = 0x1009,
  S_LPROC32_ST = 0x100A,
  S_GPROC32_ST = 0x100B,
  S_VFTABLE32 = 0x100C,
  S_REGREL32_ST = 0x100D,
  S_LTHREAD32_ST = 0x100E,
  S_GTHREAD32_ST = 0x100F,
  S_LPROCMIPS_ST = 0x1010,
  S_GPROCMIPS_ST = 0x1011,
  S_FRAMEPROC = 0x1012,
  S_COMPILE2_ST = 0x1013,
  S_MANYREG2_ST = 0x1014,
  S_LPROCIA64_ST = 0x1015,
  S_GPROCIA64_ST = 0x1016,
  S_LOCALSLOT_ST = 0x1017,
  S_PARAMSLOT_ST = 0x1018,
  S_ANNOTATION = 0x1019,
  S_GMANPROC_ST = 0x101A,
  S_LMANPROC_ST = 0x101B,
  S_RESERVED1 = 0x101C,
  S_RESERVED2 = 0x101D,
  S_RESERVED3 = 0x101E,
  S_RESERVED4 = 0x101F,
  S_LMANDATA_ST = 0x1020,
  S_GMANDATA_ST = 0x1021,
  S_MANFRAMEREL_ST = 0x1022,
  S_MANREGISTER_ST = 0x1023,
  S_MANSLOT_ST = 0x1024,
  S_MANMANYREG_ST = 0x1025,
  S_MANREGREL_ST = 0x1026,
  S_MANMANYREG2_ST = 0x1027,
  S_MANTYPREF = 0x1028,
  S_UNAMESPACE_ST = 0x1029,
  S_ST_MAX = 0x1100,
  S_OBJNAME = 0x1101,
  S_THUNK32 = 0x1102,
  S_BLOCK32 = 0x1103,
  S_WITH32 = 0x1104,
  S_LABEL32 = 0x1105,
  S_REGISTER = 0x1106,
  S_CONSTANT = 0x1107,
  S_UDT = 0x1108,
  S_COBOLUDT = 0x1109,
  S_MANYREG = 0x110A,
  S_BPREL32 = 0x110B,
  S_LDATA32 = 0x110C,
  S_GDATA32 = 0x110D,
  S_PUB32 = 0x110E,
  S_LPROC32 = 0x110F,
  S_GPROC32 = 0x1110,
  S_REGREL32 = 0x1111,
  S_LTHREAD32 = 0x1112,
  S_GTHREAD32 = 0x1113,
  S_LPROCMIPS = 0x1114,
  S_GPROCMIPS = 0x1115,
  S_COMPILE2 = 0x1116,
  S_MANYREG2 = 0x1117,
  S_LPROCIA64 = 0x1118,
  S_GPROCIA64 = 0x1119,
  S_LOCALSLOT = 0x111A,
  S_SLOT = 0x111A,
  S_PARAMSLOT = 0x111B,
  S_LMANDATA = 0x111C,
  S_GMANDATA = 0x111D,
  S_MANFRAMEREL = 0x111E,
  S_MANREGISTER = 0x111F,
  S_MANSLOT = 0x1120,
  S_MANMANYREG = 0x1121,
  S_MANREGREL = 0x1122,
  S_MANMANYREG2 = 0x1123,
  S_UNAMESPACE = 0x1124,
  S_PROCREF = 0x1125,
  S_DATAREF = 0x1126,
  S_LPROCREF = 0x1127,
  S_ANNOTATIONREF = 0x1128,
  S_TOKENREF = 0x1129,
  S_GMANPROC = 0x112A,
  S_LMANPROC = 0x112B,
  S_TRAMPOLINE = 0x112C,
  S_MANCONSTANT = 0x112D,
  S_ATTR_FRAMEREL = 0x112E,
  S_ATTR_REGISTER = 0x112F,
  S_ATTR_REGREL = 0x1130,
  S_ATTR_MANYREG = 0x1131,
  S_SEPCODE = 0x1132,
  S_LOCAL_2005 = 0x1133,
  S_DEFRANGE_2005 = 0x1134,
  S_DEFRANGE2_2005 = 0x1135,
  S_SECTION = 0x1136,
  S_COFFGROUP = 0x1137,
  S_EXPORT = 0x1138,
  S_CALLSITEINFO = 0x1139,
  S_FRAMECOOKIE = 0x113A,
  S_DISCARDED = 0x113B,
  S_COMPILE3 = 0x113C,
  S_ENVBLOCK = 0x113D,
  S_LOCAL = 0x113E,
  S_DEFRANGE = 0x113F,
  S_DEFRANGE_SUBFIELD = 0x1140,
  S_DEFRANGE_REGISTER = 0x1141,
  S_DEFRANGE_FRAMEPOINTER_REL = 0x1142,
  S_DEFRANGE_SUBFIELD_REGISTER = 0x1143,
  S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE = 0x1144,
  S_DEFRANGE_REGISTER_REL = 0x1145,
  S_RECTYPE_MAX = 0x1146,
  S_RECTYPE_LAST = 0x1145,
  S_RECTYPE_PAD = 0x1246,
};

/* 27 */
typedef IA64_REG_INDEX CV_HREG_e;

/* 28 */
enum PDBINTV
{
  PDBIntv80 = 0x131A5B5,
  PDBIntv70 = 0x131314E,
  PDBIntv70Dep = 0x1312E96,
  PDBIntv69 = 0x13107EF,
  PDBIntv61 = 0x130E272,
  PDBIntv50a = 0x130B844,
  PDBIntv60 = 0x130B844,
  PDBIntv50 = 0x13092B6,
  PDBIntv41 = 0xE0D5C,
  PDBIntv = 0x131A5B5,
};

/* 29 */
enum PDBConsts
{
  niNil = 0x0,
  PDB_MAX_PATH = 0x104,
  cbErrMax = 0x400,
};

/* 30 */
enum CV_CPU_TYPE_e
{
  CV_CFL_8080 = 0x0,
  CV_CFL_8086 = 0x1,
  CV_CFL_80286 = 0x2,
  CV_CFL_80386 = 0x3,
  CV_CFL_80486 = 0x4,
  CV_CFL_PENTIUM = 0x5,
  CV_CFL_PENTIUMII = 0x6,
  CV_CFL_PENTIUMPRO = 0x6,
  CV_CFL_PENTIUMIII = 0x7,
  CV_CFL_MIPS = 0x10,
  CV_CFL_MIPSR4000 = 0x10,
  CV_CFL_MIPS16 = 0x11,
  CV_CFL_MIPS32 = 0x12,
  CV_CFL_MIPS64 = 0x13,
  CV_CFL_MIPSI = 0x14,
  CV_CFL_MIPSII = 0x15,
  CV_CFL_MIPSIII = 0x16,
  CV_CFL_MIPSIV = 0x17,
  CV_CFL_MIPSV = 0x18,
  CV_CFL_M68000 = 0x20,
  CV_CFL_M68010 = 0x21,
  CV_CFL_M68020 = 0x22,
  CV_CFL_M68030 = 0x23,
  CV_CFL_M68040 = 0x24,
  CV_CFL_ALPHA = 0x30,
  CV_CFL_ALPHA_21064 = 0x30,
  CV_CFL_ALPHA_21164 = 0x31,
  CV_CFL_ALPHA_21164A = 0x32,
  CV_CFL_ALPHA_21264 = 0x33,
  CV_CFL_ALPHA_21364 = 0x34,
  CV_CFL_PPC601 = 0x40,
  CV_CFL_PPC603 = 0x41,
  CV_CFL_PPC604 = 0x42,
  CV_CFL_PPC620 = 0x43,
  CV_CFL_PPCFP = 0x44,
  CV_CFL_PPCBE = 0x45,
  CV_CFL_SH3 = 0x50,
  CV_CFL_SH3E = 0x51,
  CV_CFL_SH3DSP = 0x52,
  CV_CFL_SH4 = 0x53,
  CV_CFL_SHMEDIA = 0x54,
  CV_CFL_ARM3 = 0x60,
  CV_CFL_ARM4 = 0x61,
  CV_CFL_ARM4T = 0x62,
  CV_CFL_ARM5 = 0x63,
  CV_CFL_ARM5T = 0x64,
  CV_CFL_ARM6 = 0x65,
  CV_CFL_ARM_XMAC = 0x66,
  CV_CFL_ARM_WMMX = 0x67,
  CV_CFL_ARM7 = 0x68,
  CV_CFL_OMNI = 0x70,
  CV_CFL_IA64 = 0x80,
  CV_CFL_IA64_1 = 0x80,
  CV_CFL_IA64_2 = 0x81,
  CV_CFL_CEE = 0x90,
  CV_CFL_AM33 = 0xA0,
  CV_CFL_M32R = 0xB0,
  CV_CFL_TRICORE = 0xC0,
  CV_CFL_X64 = 0xD0,
  CV_CFL_AMD64 = 0xD0,
  CV_CFL_EBC = 0xE0,
  CV_CFL_THUMB = 0xF0,
};

/* 31 */
enum $DEB5B5BE307D61B7F110344B5463CDC9
{
  wtiSymsNB09 = 0x0,
  wtiSymsNB10 = 0x1,
};

/* 32 */
enum VerDataBlob
{
  vdbOne = 0x1,
  vdbXdataCur = 0x1,
  vdbPdataCur = 0x1,
};

/* 33 */
enum VerLinkInfo
{
  vliOne = 0x1,
  vliTwo = 0x2,
  vliCur = 0x2,
};

/* 34 */
enum $8D138C86D69E7080DA75FEF0B6FDB09E
{
  intv = 0x131A5B5,
  intvVC70 = 0x131314E,
  intvVC70Dep = 0x1312E96,
};

/* 35 */
enum POVC
{
};

/* 36 */
enum PCC
{
};

/* 37 */
enum PDBErrors
{
  EC_OK = 0x0,
  EC_USAGE = 0x1,
  EC_OUT_OF_MEMORY = 0x2,
  EC_FILE_SYSTEM = 0x3,
  EC_NOT_FOUND = 0x4,
  EC_INVALID_SIG = 0x5,
  EC_INVALID_AGE = 0x6,
  EC_PRECOMP_REQUIRED = 0x7,
  EC_OUT_OF_TI = 0x8,
  EC_NOT_IMPLEMENTED = 0x9,
  EC_V1_PDB = 0xA,
  EC_UNKNOWN_FORMAT = 0xA,
  EC_FORMAT = 0xB,
  EC_LIMIT = 0xC,
  EC_CORRUPT = 0xD,
  EC_TI16 = 0xE,
  EC_ACCESS_DENIED = 0xF,
  EC_ILLEGAL_TYPE_EDIT = 0x10,
  EC_INVALID_EXECUTABLE = 0x11,
  EC_DBG_NOT_FOUND = 0x12,
  EC_NO_DEBUG_INFO = 0x13,
  EC_INVALID_EXE_TIMESTAMP = 0x14,
  EC_CORRUPT_TYPEPOOL = 0x15,
  EC_DEBUG_INFO_NOT_IN_PDB = 0x16,
  EC_RPC = 0x17,
  EC_UNKNOWN = 0x18,
  EC_BAD_CACHE_PATH = 0x19,
  EC_CACHE_FULL = 0x1A,
  EC_TOO_MANY_MOD_ADDTYPE = 0x1B,
  EC_MAX = 0x1C,
};

/* 38 */
typedef $8D138C86D69E7080DA75FEF0B6FDB09E $45779E4367167A43C582A61370838EA2;

/* 39 */
enum DBGTYPE
{
};

/* 40 */
enum DOVC
{
};

/* 41 */
enum PDBIMPV
{
  PDBImpvVC2 = 0x13048EA,
  PDBImpvVC4 = 0x1306C1F,
  PDBImpvVC41 = 0x1306CDE,
  PDBImpvVC50 = 0x13091F3,
  PDBImpvVC98 = 0x130BA2C,
  PDBImpvVC70 = 0x1312E94,
  PDBImpvVC70Dep = 0x131084C,
  PDBImpvVC80 = 0x131A5B5,
  PDBImpv = 0x131A5B5,
};

/* 42 */
enum EXCEPTION_DEBUGGER_ENUM
{
  EXCEPTION_DEBUGGER_NAME_THREAD = 0x1000,
  EXCEPTION_DEBUGGER_PROBE = 0x1001,
  EXCEPTION_DEBUGGER_RUNTIMECHECK = 0x1002,
  EXCEPTION_DEBUGGER_FIBER = 0x1003,
  EXCEPTION_DEBUGGER_HANDLECHECK = 0x1004,
  EXCEPTION_DEBUGGER_MAX = 0x1004,
};

/* 43 */
struct __cppobj std::_Iosb<int>
{
};

/* 44 */
struct __cppobj std::ios_base : std::_Iosb<int>
{
  std::ios_baseVtbl *vfptr;
  unsigned int _Stdstr;
  int _Mystate;
  int _Except;
  int _Fmtfl;
  __int64 _Prec;
  __int64 _Wide;
  std::ios_base::_Iosarray *_Arr;
  std::ios_base::_Fnarray *_Calls;
  std::locale *_Ploc;
};

/* 45 */
struct std::ios_baseVtbl
{
  void *(__thiscall *__vecDelDtor)(std::ios_base *this, unsigned int);
};

/* 46 */
struct std::ios_base::_Iosarray
{
  std::ios_base::_Iosarray *_Next;
  int _Index;
  int _Lo;
  void *_Vp;
};

/* 47 */
struct std::ios_base::_Fnarray
{
  std::ios_base::_Fnarray *_Next;
  int _Index;
  void (__cdecl *_Pfn)(std::ios_base::event, std::ios_base *, int);
};

/* 48 */
struct __cppobj std::_Locbase<int>
{
};

/* 49 */
struct std::locale::facet
{
  std::locale::facetVtbl *vfptr;
  unsigned int _Refs;
};

/* 50 */
struct std::locale::facetVtbl
{
  void *(__thiscall *__vecDelDtor)(std::locale::facet *this, unsigned int);
};

/* 51 */
struct __declspec(align(4)) std::_Yarn<char>
{
  char *_Myptr;
  char _Nul;
};

/* 52 */
struct __cppobj std::locale::_Locimp : std::locale::facet
{
  std::locale::facet **_Facetvec;
  unsigned int _Facetcount;
  int _Catmask;
  bool _Xparent;
  std::_Yarn<char> _Name;
};

/* 53 */
struct __cppobj std::locale : std::_Locbase<int>
{
  std::locale::_Locimp *_Ptr;
};

/* 57 */
struct std::_Mutex
{
  void *_Mtx;
};

/* 54 */
struct std::basic_streambuf<char,std::char_traits<char> >
{
  std::basic_streambuf<char,std::char_traits<char> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  char *_Gfirst;
  char *_Pfirst;
  char **_IGfirst;
  char **_IPfirst;
  char *_Gnext;
  char *_Pnext;
  char **_IGnext;
  char **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 55 */
struct __declspec(align(8)) std::fpos<int>
{
  __int64 _Myoff;
  __int64 _Fpos;
  int _Mystate;
};

/* 56 */
struct std::basic_streambuf<char,std::char_traits<char> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<char,std::char_traits<char> > *this, unsigned int);
  _BYTE gap4[4];
  void (__thiscall *_Unlock)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *overflow)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  int (__thiscall *pbackfail)(std::basic_streambuf<char,std::char_traits<char> > *this, int);
  __int64 (__thiscall *showmanyc)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *underflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  int (__thiscall *uflow)(std::basic_streambuf<char,std::char_traits<char> > *this);
  __int64 (__thiscall *xsgetn)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, __int64);
  __int64 (__thiscall *xsputn)(std::basic_streambuf<char,std::char_traits<char> > *this, const char *, __int64);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<int> *result, __int64, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<char,std::char_traits<char> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<char,std::char_traits<char> > *(__thiscall *setbuf)(std::basic_streambuf<char,std::char_traits<char> > *this, char *, __int64);
  int (__thiscall *sync)(std::basic_streambuf<char,std::char_traits<char> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<char,std::char_traits<char> > *this, std::locale *);
};

/* 58 */
struct __cppobj std::basic_ostream<char,std::char_traits<char> >
{
  _BYTE gap0[80];
};

/* 59 */
struct __cppobj __declspec(align(8)) std::basic_ios<char,std::char_traits<char> > : std::ios_base
{
  std::basic_streambuf<char,std::char_traits<char> > *_Mystrbuf;
  std::basic_ostream<char,std::char_traits<char> > *_Tiestr;
  char _Fillch;
};

/* 60 */
struct __cppobj std::iterator<std::output_iterator_tag,void,void,void,void>
{
};

/* 61 */
struct __cppobj std::_Outit : std::iterator<std::output_iterator_tag,void,void,void,void>
{
};

/* 62 */
struct __cppobj std::ostreambuf_iterator<char,std::char_traits<char> > : std::_Outit
{
  bool _Failed;
  std::basic_streambuf<char,std::char_traits<char> > *_Strbuf;
};

/* 63 */
struct _Cvtvec
{
  unsigned int _Hand;
  unsigned int _Page;
};

/* 64 */
struct __cppobj std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 65 */
struct std::basic_ostream<char,std::char_traits<char> >::_Sentry_base
{
  std::basic_ostream<char,std::char_traits<char> > *_Myostr;
};

/* 66 */
struct __cppobj __declspec(align(4)) std::basic_ostream<char,std::char_traits<char> >::sentry : std::basic_ostream<char,std::char_traits<char> >::_Sentry_base
{
  bool _Ok;
};

/* 67 */
struct _TypeDescriptor
{
  const void *pVFTable;
  void *spare;
  char name[];
};

/* 68 */
struct _PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 69 */
struct _s__RTTIBaseClassDescriptor2
{
  _TypeDescriptor *pTypeDescriptor;
  unsigned int numContainedBases;
  _PMD where;
  unsigned int attributes;
  _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

/* 70 */
const struct __unaligned __declspec(align(1)) _s__RTTIBaseClassArray
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[];
};

/* 71 */
const struct _s__RTTIClassHierarchyDescriptor
{
  unsigned int signature;
  unsigned int attributes;
  unsigned int numBaseClasses;
  _s__RTTIBaseClassArray *pBaseClassArray;
};

/* 72 */
struct _s__CatchableType
{
  unsigned int properties;
  _TypeDescriptor *pType;
  _PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)();
};

/* 73 */
struct _s__CatchableTypeArray
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[];
};

/* 74 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_16
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[4];
  _BYTE gap10[1];
};

/* 75 */
struct _s__RTTICompleteObjectLocator
{
  unsigned int signature;
  unsigned int offset;
  unsigned int cdOffset;
  _TypeDescriptor *pTypeDescriptor;
  _s__RTTIClassHierarchyDescriptor *pClassDescriptor;
};

/* 76 */
struct tagLC_ID
{
  unsigned __int16 wLanguage;
  unsigned __int16 wCountry;
  unsigned __int16 wCodePage;
};

/* 77 */
struct $BC236CFBD570C18489EB46681F52D83D
{
  char *locale;
  unsigned __int16 *wlocale;
  int *refcount;
  int *wrefcount;
};

/* 355 */
typedef unsigned __int16 wchar_t;

/* 78 */
struct lconv
{
  char *decimal_point;
  char *thousands_sep;
  char *grouping;
  char *int_curr_symbol;
  char *currency_symbol;
  char *mon_decimal_point;
  char *mon_thousands_sep;
  char *mon_grouping;
  char *positive_sign;
  char *negative_sign;
  char int_frac_digits;
  char frac_digits;
  char p_cs_precedes;
  char p_sep_by_space;
  char n_cs_precedes;
  char n_sep_by_space;
  char p_sign_posn;
  char n_sign_posn;
  wchar_t *_W_decimal_point;
  wchar_t *_W_thousands_sep;
  wchar_t *_W_int_curr_symbol;
  wchar_t *_W_currency_symbol;
  wchar_t *_W_mon_decimal_point;
  wchar_t *_W_mon_thousands_sep;
  wchar_t *_W_positive_sign;
  wchar_t *_W_negative_sign;
};

/* 79 */
struct threadlocaleinfostruct
{
  int refcount;
  unsigned int lc_codepage;
  unsigned int lc_collate_cp;
  unsigned int lc_handle[6];
  tagLC_ID lc_id[6];
  $BC236CFBD570C18489EB46681F52D83D lc_category[6];
  int lc_clike;
  int mb_cur_max;
  int *lconv_intl_refcount;
  int *lconv_num_refcount;
  int *lconv_mon_refcount;
  lconv *lconv;
  int *ctype1_refcount;
  unsigned __int16 *ctype1;
  const unsigned __int16 *pctype;
  const char *pclmap;
  const char *pcumap;
  struct __lc_time_data *lc_time_curr;
};

/* 80 */
struct localeinfo_struct
{
  threadlocaleinfostruct *locinfo;
  threadmbcinfostruct *mbcinfo;
};

/* 81 */
struct std::_Container_proxy
{
  std::_Container_base12 *_Mycont;
  std::_Iterator_base12 *_Myfirstiter;
};

/* 82 */
const struct std::_Container_base12
{
  std::_Container_proxy *_Myproxy;
};

/* 83 */
struct std::_Iterator_base12
{
  std::_Container_proxy *_Myproxy;
  std::_Iterator_base12 *_Mynextiter;
};

/* 84 */
struct __cppobj std::input_iterator_tag
{
};

/* 85 */
struct __cppobj std::output_iterator_tag
{
};

/* 86 */
struct __cppobj std::forward_iterator_tag : std::input_iterator_tag, std::output_iterator_tag
{
  _BYTE gap0[1];
};

/* 87 */
struct __cppobj std::bidirectional_iterator_tag : std::forward_iterator_tag
{
};

/* 88 */
struct __cppobj std::random_access_iterator_tag : std::bidirectional_iterator_tag
{
};

/* 89 */
struct __cppobj std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12> : std::_Iterator_base12
{
};

/* 90 */
struct std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >
{
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  wchar_t *_Gfirst;
  wchar_t *_Pfirst;
  wchar_t **_IGfirst;
  wchar_t **_IPfirst;
  wchar_t *_Gnext;
  wchar_t *_Pnext;
  wchar_t **_IGnext;
  wchar_t **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 91 */
struct std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned int);
  _BYTE gap4[4];
  void (__thiscall *_Unlock)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  unsigned __int16 (__thiscall *overflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned __int16);
  unsigned __int16 (__thiscall *pbackfail)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, unsigned __int16);
  __int64 (__thiscall *showmanyc)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  unsigned __int16 (__thiscall *underflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  unsigned __int16 (__thiscall *uflow)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  __int64 (__thiscall *xsgetn)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, wchar_t *, __int64);
  __int64 (__thiscall *xsputn)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, const wchar_t *, __int64);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::fpos<int> *result, __int64, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *(__thiscall *setbuf)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, wchar_t *, __int64);
  int (__thiscall *sync)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *this, std::locale *);
};

/* 92 */
struct __cppobj std::char_traits<wchar_t>
{
};

/* 93 */
struct __declspec(align(4)) std::exception
{
  std::exceptionVtbl *vfptr;
  const char *_Mywhat;
  bool _Mydofree;
};

/* 94 */
struct std::exceptionVtbl
{
  void *(__thiscall *__vecDelDtor)(std::exception *this, unsigned int);
  const char *(__thiscall *what)(std::exception *this);
};

/* 95 */
struct __cppobj std::logic_error : std::exception
{
};

/* 96 */
struct __cppobj std::length_error : std::logic_error
{
};

/* 97 */
union std::_String_val<char,std::allocator<char> >::_Bxty
{
  char _Buf[16];
  char *_Ptr;
  char _Alias[16];
};

/* 98 */
struct __cppobj std::_Allocator_base<char>
{
};

/* 99 */
struct __cppobj std::allocator<char> : std::_Allocator_base<char>
{
};

/* 100 */
struct __cppobj __declspec(align(4)) std::_String_val<char,std::allocator<char> > : std::_Container_base12
{
  std::_String_val<char,std::allocator<char> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
  std::allocator<char> _Alval;
};

/* 101 */
struct __cppobj std::basic_string<char,std::char_traits<char>,std::allocator<char> > : std::_String_val<char,std::allocator<char> >
{
};

/* 102 */
struct __cppobj std::runtime_error : std::exception
{
};

/* 103 */
struct __cppobj std::_Allocator_base<std::_Container_proxy>
{
};

/* 104 */
struct __cppobj std::ctype_base : std::locale::facet
{
};

/* 105 */
struct _Ctypevec
{
  unsigned int _Hand;
  unsigned int _Page;
  const __int16 *_Table;
  int _Delfl;
};

/* 106 */
struct __cppobj std::ctype<char> : std::ctype_base
{
  _Ctypevec _Ctype;
};

/* 107 */
struct std::locale::id
{
  unsigned int _Id;
};

/* 108 */
struct std::_Lockit
{
  int _Locktype;
};

/* 109 */
struct std::_Locinfo
{
  std::_Lockit _Lock;
  std::_Yarn<char> _Days;
  std::_Yarn<char> _Months;
  std::_Yarn<char> _Oldlocname;
  std::_Yarn<char> _Newlocname;
};

/* 110 */
struct __cppobj std::iterator<std::input_iterator_tag,char,__int64,char *,char &>
{
};

/* 111 */
struct __cppobj std::_Num_base
{
};

/* 112 */
struct __cppobj std::_Num_int_base : std::_Num_base
{
};

/* 113 */
struct __cppobj std::numeric_limits<unsigned int> : std::_Num_int_base
{
};

/* 114 */
struct __cppobj std::allocator<void>
{
};

/* 115 */
struct __cppobj std::ctype_byname<char> : std::ctype<char>
{
};

/* 116 */
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >
{
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl *vfptr;
  std::_Mutex _Mylock;
  unsigned __int16 *_Gfirst;
  unsigned __int16 *_Pfirst;
  unsigned __int16 **_IGfirst;
  unsigned __int16 **_IPfirst;
  unsigned __int16 *_Gnext;
  unsigned __int16 *_Pnext;
  unsigned __int16 **_IGnext;
  unsigned __int16 **_IPnext;
  int _Gcount;
  int _Pcount;
  int *_IGcount;
  int *_IPcount;
  std::locale *_Plocale;
};

/* 117 */
struct std::basic_streambuf<unsigned short,std::char_traits<unsigned short> >Vtbl
{
  void *(__thiscall *__vecDelDtor)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned int);
  _BYTE gap4[4];
  void (__thiscall *_Unlock)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *overflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16);
  unsigned __int16 (__thiscall *pbackfail)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16);
  __int64 (__thiscall *showmanyc)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *underflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  unsigned __int16 (__thiscall *uflow)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  __int64 (__thiscall *xsgetn)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16 *, __int64);
  __int64 (__thiscall *xsputn)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, const unsigned __int16 *, __int64);
  std::fpos<int> *(__thiscall *seekoff)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::fpos<int> *result, __int64, int, int);
  std::fpos<int> *(__thiscall *seekpos)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::fpos<int> *result, std::fpos<int>, int);
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *(__thiscall *setbuf)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, unsigned __int16 *, __int64);
  int (__thiscall *sync)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this);
  void (__thiscall *imbue)(std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *this, std::locale *);
};

/* 118 */
struct __cppobj std::basic_ostream<unsigned short,std::char_traits<unsigned short> >
{
  _BYTE gap0[80];
};

/* 119 */
struct __cppobj __declspec(align(8)) std::basic_ios<unsigned short,std::char_traits<unsigned short> > : std::ios_base
{
  std::basic_streambuf<unsigned short,std::char_traits<unsigned short> > *_Mystrbuf;
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *_Tiestr;
  unsigned __int16 _Fillch;
};

/* 120 */
struct __declspec(align(8)) std::basic_istream<unsigned short,std::char_traits<unsigned short> >
{
  _BYTE gap0[8];
  __int64 _Chcount;
  _BYTE gap10[72];
};

/* 121 */
struct __cppobj std::ctype<unsigned short> : std::ctype_base
{
  _Ctypevec _Ctype;
  _Cvtvec _Cvt;
};

/* 122 */
struct std::basic_istream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  std::basic_istream<unsigned short,std::char_traits<unsigned short> > *_Myistr;
};

/* 123 */
struct __cppobj __declspec(align(4)) std::basic_istream<unsigned short,std::char_traits<unsigned short> >::sentry : std::basic_istream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  bool _Ok;
};

/* 124 */
struct std::_Bool_struct
{
  int _Member;
};

/* 125 */
struct __cppobj std::_Allocator_base<wchar_t>
{
};

/* 126 */
struct __cppobj std::allocator<wchar_t> : std::_Allocator_base<wchar_t>
{
};

/* 127 */
union std::_String_val<wchar_t,std::allocator<wchar_t> >::_Bxty
{
  wchar_t _Buf[8];
  wchar_t *_Ptr;
  char _Alias[8];
};

/* 128 */
struct __cppobj __declspec(align(4)) std::_String_val<wchar_t,std::allocator<wchar_t> > : std::_Container_base12
{
  std::_String_val<wchar_t,std::allocator<wchar_t> >::_Bxty _Bx;
  unsigned int _Mysize;
  unsigned int _Myres;
  std::allocator<wchar_t> _Alval;
};

/* 129 */
struct __cppobj std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12> : std::_Iterator_base12
{
};

/* 130 */
struct __cppobj std::unary_function<std::error_code,unsigned int>
{
};

/* 131 */
const struct std::error_category
{
  std::error_categoryVtbl *vfptr;
};

/* 132 */
struct std::error_condition
{
  int _Myval;
  std::error_category *_Mycat;
};

/* 133 */
struct std::error_code
{
  int _Myval;
  std::error_category *_Mycat;
};

/* 134 */
struct std::error_categoryVtbl
{
  void *(__thiscall *__vecDelDtor)(std::error_category *this, unsigned int);
  const char *(__thiscall *name)(std::error_category *this);
  std::basic_string<char,std::char_traits<char>,std::allocator<char> > *(__thiscall *message)(std::error_category *this, std::basic_string<char,std::char_traits<char>,std::allocator<char> > *result, int);
  std::error_condition *(__thiscall *default_error_condition)(std::error_category *this, std::error_condition *result, int);
  bool (__thiscall *equivalent)(std::error_category *this, std::error_code *, int);
  bool (__thiscall *equivalent)(std::error_category *this, int, std::error_condition *);
};

/* 135 */
struct __cppobj std::hash<std::error_code> : std::unary_function<std::error_code,unsigned int>
{
};

/* 136 */
struct __cppobj std::allocator<char>::rebind<char>
{
};

/* 137 */
struct __cppobj std::allocator<std::_Container_proxy> : std::_Allocator_base<std::_Container_proxy>
{
};

/* 138 */
struct __cppobj std::allocator<char>::rebind<std::_Container_proxy>
{
};

/* 139 */
struct __cppobj std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > : std::_String_val<wchar_t,std::allocator<wchar_t> >
{
};

/* 140 */
struct __cppobj std::_String_const_iterator<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > : std::_Iterator012<std::random_access_iterator_tag,wchar_t,int,wchar_t const *,wchar_t const &,std::_Iterator_base12>
{
  const wchar_t *_Ptr;
};

/* 141 */
struct __cppobj std::char_traits<char>
{
};

/* 142 */
struct __cppobj std::bad_cast : std::exception
{
};

/* 143 */
struct __cppobj std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > : std::_Outit
{
  bool _Failed;
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *_Strbuf;
};

/* 144 */
struct __cppobj std::basic_ostream<wchar_t,std::char_traits<wchar_t> >
{
  _BYTE gap0[80];
};

/* 145 */
struct __cppobj std::_Num_float_base : std::_Num_base
{
};

/* 146 */
struct __cppobj std::numeric_limits<float> : std::_Num_float_base
{
};

/* 147 */
struct std::_DebugHeapTag_t
{
  int _Type;
};

/* 148 */
struct __cppobj std::numeric_limits<__int64> : std::_Num_int_base
{
};

/* 149 */
struct __cppobj std::system_error : std::runtime_error
{
  std::error_code _Mycode;
};

/* 150 */
struct __cppobj __declspec(align(4)) std::istreambuf_iterator<char,std::char_traits<char> > : std::iterator<std::input_iterator_tag,char,__int64,char *,char &>
{
  std::basic_streambuf<char,std::char_traits<char> > *_Strbuf;
  bool _Got;
  char _Val;
};

/* 151 */
struct __declspec(align(8)) std::basic_istream<char,std::char_traits<char> >
{
  _BYTE gap0[8];
  __int64 _Chcount;
  _BYTE gap10[72];
};

/* 152 */
struct __cppobj std::invalid_argument : std::logic_error
{
};

/* 153 */
struct __declspec(align(8)) std::basic_istream<wchar_t,std::char_traits<wchar_t> >
{
  _BYTE gap0[8];
  __int64 _Chcount;
  _BYTE gap10[72];
};

/* 154 */
struct __cppobj __declspec(align(8)) std::basic_ios<wchar_t,std::char_traits<wchar_t> > : std::ios_base
{
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *_Mystrbuf;
  std::basic_ostream<wchar_t,std::char_traits<wchar_t> > *_Tiestr;
  wchar_t _Fillch;
};

/* 155 */
struct __cppobj std::basic_iostream<wchar_t,std::char_traits<wchar_t> > : std::basic_istream<wchar_t,std::char_traits<wchar_t> >
{
  _BYTE[8];
};

/* 156 */
struct __cppobj std::iterator<std::input_iterator_tag,wchar_t,__int64,wchar_t *,wchar_t &>
{
};

/* 157 */
struct __cppobj std::codecvt_base : std::locale::facet
{
};

/* 158 */
struct __cppobj std::basic_iostream<char,std::char_traits<char> > : std::basic_istream<char,std::char_traits<char> >
{
  _BYTE[8];
};

/* 159 */
struct __cppobj std::numpunct<char> : std::locale::facet
{
  const char *_Grouping;
  char _Dp;
  char _Kseparator;
  const char *_Falsename;
  const char *_Truename;
};

/* 160 */
struct __cppobj std::underflow_error : std::runtime_error
{
};

/* 161 */
struct __cppobj std::bad_exception : std::exception
{
};

/* 162 */
struct __cppobj std::numeric_limits<bool> : std::_Num_int_base
{
};

/* 163 */
struct __cppobj std::numeric_limits<unsigned short> : std::_Num_int_base
{
};

/* 164 */
struct __cppobj std::_Container_base0
{
};

/* 165 */
struct __cppobj std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 166 */
struct std::basic_istream<char,std::char_traits<char> >::_Sentry_base
{
  std::basic_istream<char,std::char_traits<char> > *_Myistr;
};

/* 167 */
struct __cppobj __declspec(align(4)) std::basic_istream<char,std::char_traits<char> >::sentry : std::basic_istream<char,std::char_traits<char> >::_Sentry_base
{
  bool _Ok;
};

/* 168 */
struct __cppobj std::numpunct<wchar_t> : std::locale::facet
{
  const char *_Grouping;
  wchar_t _Dp;
  wchar_t _Kseparator;
  const wchar_t *_Falsename;
  const wchar_t *_Truename;
};

/* 169 */
struct __cppobj std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > : std::iterator<std::input_iterator_tag,wchar_t,__int64,wchar_t *,wchar_t &>
{
  std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > *_Strbuf;
  bool _Got;
  wchar_t _Val;
};

/* 170 */
struct __cppobj std::allocator<wchar_t>::rebind<wchar_t>
{
};

/* 171 */
struct __cppobj std::allocator<wchar_t>::rebind<std::_Container_proxy>
{
};

/* 172 */
struct __cppobj std::numeric_limits<unsigned long> : std::_Num_int_base
{
};

/* 173 */
struct __cppobj std::bad_typeid : std::exception
{
};

/* 174 */
struct __cppobj std::codecvt<unsigned short,char,int> : std::codecvt_base
{
  _Cvtvec _Cvt;
};

/* 175 */
struct __cppobj std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> > : std::_Iterator012<std::random_access_iterator_tag,char,int,char const *,char const &,std::_Iterator_base12>
{
  const char *_Ptr;
};

/* 176 */
struct std::_Exception_ptr
{
  void *_Data1;
  void *_Data2;
};

/* 177 */
struct __cppobj std::numeric_limits<int> : std::_Num_int_base
{
};

/* 178 */
struct __cppobj std::_Iterator_base0
{
};

/* 179 */
struct __cppobj std::ctype<wchar_t> : std::ctype_base
{
  _Ctypevec _Ctype;
  _Cvtvec _Cvt;
};

/* 180 */
struct __cppobj std::tr1::_Nil
{
};

/* 181 */
struct __cppobj std::char_traits<unsigned short>
{
};

/* 182 */
struct __cppobj std::numeric_limits<char> : std::_Num_int_base
{
};

/* 183 */
struct __cppobj std::domain_error : std::logic_error
{
};

/* 184 */
struct __cppobj std::numeric_limits<double> : std::_Num_float_base
{
};

/* 185 */
struct __cppobj std::numeric_limits<long double> : std::_Num_float_base
{
};

/* 186 */
struct __cppobj std::__non_rtti_object : std::bad_typeid
{
};

/* 187 */
struct __cppobj std::num_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 188 */
struct __cppobj std::bad_alloc : std::exception
{
};

/* 189 */
struct __cppobj std::bad_array_new_length : std::bad_alloc
{
};

/* 190 */
struct __cppobj std::overflow_error : std::runtime_error
{
};

/* 191 */
struct __cppobj std::unary_function<std::error_condition,unsigned int>
{
};

/* 192 */
struct __cppobj std::hash<std::error_condition> : std::unary_function<std::error_condition,unsigned int>
{
};

/* 193 */
struct __cppobj std::range_error : std::runtime_error
{
};

/* 194 */
struct _Collvec
{
  unsigned int _Hand;
  unsigned int _Page;
};

/* 195 */
struct std::_Timevec
{
  void *_Timeptr;
};

/* 196 */
struct __cppobj std::numeric_limits<long> : std::_Num_int_base
{
};

/* 197 */
struct __cppobj std::out_of_range : std::logic_error
{
};

/* 198 */
struct __cppobj std::codecvt<char,char,int> : std::codecvt_base
{
};

/* 199 */
struct std::basic_istream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  std::basic_istream<wchar_t,std::char_traits<wchar_t> > *_Myistr;
};

/* 200 */
struct __cppobj __declspec(align(4)) std::basic_istream<wchar_t,std::char_traits<wchar_t> >::sentry : std::basic_istream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  bool _Ok;
};

/* 201 */
struct __cppobj std::numeric_limits<wchar_t> : std::_Num_int_base
{
};

/* 202 */
struct __cppobj std::numeric_limits<unsigned char> : std::_Num_int_base
{
};

/* 203 */
struct __cppobj std::numeric_limits<unsigned __int64> : std::_Num_int_base
{
};

/* 204 */
struct __cppobj std::codecvt<wchar_t,char,int> : std::codecvt_base
{
  _Cvtvec _Cvt;
};

/* 205 */
struct __cppobj std::numeric_limits<short> : std::_Num_int_base
{
};

/* 206 */
struct __cppobj std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t> > > : std::locale::facet
{
  _Cvtvec _Cvt;
};

/* 207 */
struct std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  std::basic_ostream<wchar_t,std::char_traits<wchar_t> > *_Myostr;
};

/* 208 */
struct __cppobj __declspec(align(4)) std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::sentry : std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::_Sentry_base
{
  bool _Ok;
};

/* 209 */
struct __cppobj std::numeric_limits<signed char> : std::_Num_int_base
{
};

/* 210 */
struct __cppobj std::ios_base::failure : std::system_error
{
};

/* 211 */
struct __cppobj std::ios_base::Init
{
};

/* 212 */
struct std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  std::basic_ostream<unsigned short,std::char_traits<unsigned short> > *_Myostr;
};

/* 213 */
struct __cppobj __declspec(align(4)) std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::sentry : std::basic_ostream<unsigned short,std::char_traits<unsigned short> >::_Sentry_base
{
  bool _Ok;
};

/* 214 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_50
{
  const void *pVFTable;
  void *spare;
  char name[50];
};

/* 215 */
struct __declspec(align(4)) type_info
{
  type_infoVtbl *vfptr;
  void *_M_data;
  char _M_d_name[1];
};

/* 216 */
struct type_infoVtbl
{
  void *(__thiscall *__vecDelDtor)(type_info *this, unsigned int);
};

/* 217 */
struct __type_info_node
{
  void *_MemPtr;
  __type_info_node *_Next;
};

/* 218 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_21
{
  const void *pVFTable;
  void *spare;
  char name[21];
};

/* 219 */
struct $_TypeDescriptor$_extraBytes_52
{
  const void *pVFTable;
  void *spare;
  char name[52];
};

/* 220 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_27
{
  const void *pVFTable;
  void *spare;
  char name[27];
};

/* 221 */
struct $_TypeDescriptor$_extraBytes_24
{
  const void *pVFTable;
  void *spare;
  char name[24];
};

/* 222 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_8
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[2];
  _BYTE gap8[1];
};

/* 223 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_26
{
  const void *pVFTable;
  void *spare;
  char name[26];
};

/* 224 */
struct _lldiv_t
{
  __int64 quot;
  __int64 rem;
};

/* 225 */
union _Dconst
{
  unsigned __int16 _Word[8];
  float _Float;
  long double _Double;
  long double _Long_double;
};

/* 226 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_4
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[1];
  _BYTE gap4[1];
};

/* 227 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_19
{
  const void *pVFTable;
  void *spare;
  char name[19];
};

/* 228 */
struct _s__ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)();
  int (*pForwardCompat)(...);
  _s__CatchableTypeArray *pCatchableTypeArray;
};

/* 229 */
struct $F0551D0CB09E7A078CAEF7CAC43D74C7
{
  char *locale;
  wchar_t *wlocale;
  int *refcount;
  int *wrefcount;
};

/* 230 */
struct __declspec(align(4)) __vc_attributes::helper_attributes::source_annotation_attributeAttribute
{
  int ValidOn;
  bool AllowMultiple;
};

/* 231 */
struct __cppobj __vc_attributes::helper_attributes::repeatableAttribute
{
};

/* 232 */
struct vc_attributes::PostRangeAttribute
{
  unsigned int Deref;
  const char *MinVal;
  const char *MaxVal;
};

/* 233 */
struct vc_attributes::PreBoundAttribute
{
  unsigned int Deref;
};

/* 234 */
struct vc_attributes::PreAttribute
{
  unsigned int Deref;
  vc_attributes::YesNoMaybe Valid;
  vc_attributes::YesNoMaybe Null;
  vc_attributes::YesNoMaybe Tainted;
  vc_attributes::AccessType Access;
  unsigned int ValidElementsConst;
  unsigned int ValidBytesConst;
  const wchar_t *ValidElements;
  const wchar_t *ValidBytes;
  const wchar_t *ValidElementsLength;
  const wchar_t *ValidBytesLength;
  unsigned int WritableElementsConst;
  unsigned int WritableBytesConst;
  const wchar_t *WritableElements;
  const wchar_t *WritableBytes;
  const wchar_t *WritableElementsLength;
  const wchar_t *WritableBytesLength;
  unsigned int ElementSizeConst;
  const wchar_t *ElementSize;
  vc_attributes::YesNoMaybe NullTerminated;
  const wchar_t *Condition;
};

/* 235 */
struct vc_attributes::InvalidCheckAttribute
{
  int Value;
};

/* 236 */
struct vc_attributes::PostAttribute
{
  unsigned int Deref;
  vc_attributes::YesNoMaybe Valid;
  vc_attributes::YesNoMaybe Null;
  vc_attributes::YesNoMaybe Tainted;
  vc_attributes::AccessType Access;
  unsigned int ValidElementsConst;
  unsigned int ValidBytesConst;
  const wchar_t *ValidElements;
  const wchar_t *ValidBytes;
  const wchar_t *ValidElementsLength;
  const wchar_t *ValidBytesLength;
  unsigned int WritableElementsConst;
  unsigned int WritableBytesConst;
  const wchar_t *WritableElements;
  const wchar_t *WritableBytes;
  const wchar_t *WritableElementsLength;
  const wchar_t *WritableBytesLength;
  unsigned int ElementSizeConst;
  const wchar_t *ElementSize;
  vc_attributes::YesNoMaybe NullTerminated;
  vc_attributes::YesNoMaybe MustCheck;
  const wchar_t *Condition;
};

/* 237 */
struct vc_attributes::SuccessAttribute
{
  const wchar_t *Condition;
};

/* 238 */
struct vc_attributes::FormatStringAttribute
{
  const wchar_t *Style;
  const wchar_t *UnformattedAlternative;
};

/* 239 */
struct vc_attributes::PostBoundAttribute
{
  unsigned int Deref;
};

/* 240 */
struct vc_attributes::PreRangeAttribute
{
  unsigned int Deref;
  const char *MinVal;
  const char *MaxVal;
};

/* 241 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_22
{
  const void *pVFTable;
  void *spare;
  char name[22];
};

/* 242 */
struct $_s__CatchableTypeArray$_extraBytes_8
{
  int nCatchableTypes;
  _s__CatchableType *arrayOfCatchableTypes[2];
};

/* 243 */
struct _ldiv_t
{
  int quot;
  int rem;
};

/* 244 */
struct _iobuf
{
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/* 245 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_31
{
  const void *pVFTable;
  void *spare;
  char name[31];
};

/* 246 */
struct __unaligned __declspec(align(2)) $_TypeDescriptor$_extraBytes_46
{
  const void *pVFTable;
  void *spare;
  char name[46];
};

/* 247 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_23
{
  const void *pVFTable;
  void *spare;
  char name[23];
};

/* 248 */
struct $_TypeDescriptor$_extraBytes_20
{
  const void *pVFTable;
  void *spare;
  char name[20];
};

/* 249 */
struct __unaligned __declspec(align(1)) $_s__RTTIBaseClassArray$_extraBytes_12
{
  _s__RTTIBaseClassDescriptor2 *arrayOfBaseClassDescriptors[3];
  _BYTE gapC[1];
};

/* 250 */
struct __unaligned __declspec(align(1)) $_TypeDescriptor$_extraBytes_25
{
  const void *pVFTable;
  void *spare;
  char name[25];
};

/* 251 */
struct TypeDescriptor
{
  unsigned int hash;
  void *spare;
  char name[];
};

/* 252 */
struct PMD
{
  int mdisp;
  int pdisp;
  int vdisp;
};

/* 253 */
struct _s_CatchableType
{
  unsigned int properties;
  TypeDescriptor *pType;
  PMD thisDisplacement;
  int sizeOrOffset;
  void (__cdecl *copyFunction)();
};

/* 254 */
struct _s_CatchableTypeArray
{
  int nCatchableTypes;
  _s_CatchableType *arrayOfCatchableTypes[];
};

/* 255 */
struct _FLOATING_SAVE_AREA
{
  unsigned int ControlWord;
  unsigned int StatusWord;
  unsigned int TagWord;
  unsigned int ErrorOffset;
  unsigned int ErrorSelector;
  unsigned int DataOffset;
  unsigned int DataSelector;
  char RegisterArea[80];
  unsigned int Cr0NpxState;
};

/* 256 */
struct _EXCEPTION_RECORD
{
  int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 257 */
struct _CONTEXT
{
  unsigned int ContextFlags;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  _FLOATING_SAVE_AREA FloatSave;
  unsigned int SegGs;
  unsigned int SegFs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned int Ebp;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int Esp;
  unsigned int SegSs;
  char ExtendedRegisters[512];
};

/* 258 */
struct _EXCEPTION_POINTERS
{
  _EXCEPTION_RECORD *ExceptionRecord;
  _CONTEXT *ContextRecord;
};

/* 259 */
struct $8C32E5D3ED1763EA38B94549972C5F20
{
  unsigned __int32 LongFunction : 1;
  unsigned __int32 Persistent : 1;
  unsigned __int32 Private : 30;
};

/* 260 */
union $BD4279322585C303B58244032E2D0AD0
{
  unsigned int Flags;
  $8C32E5D3ED1763EA38B94549972C5F20 s;
};

/* 261 */
struct _TP_CALLBACK_ENVIRON_V1
{
  unsigned int Version;
  _TP_POOL *Pool;
  _TP_CLEANUP_GROUP *CleanupGroup;
  void (__stdcall *CleanupGroupCancelCallback)(void *, void *);
  void *RaceDll;
  _ACTIVATION_CONTEXT *ActivationContext;
  void (__stdcall *FinalizationCallback)(_TP_CALLBACK_INSTANCE *, void *);
  $BD4279322585C303B58244032E2D0AD0 u;
};

/* 262 */
struct _s_ThrowInfo
{
  unsigned int attributes;
  void (__cdecl *pmfnUnwind)();
  int (*pForwardCompat)(...);
  _s_CatchableTypeArray *pCatchableTypeArray;
};

/* 263 */
struct __cppobj <CrtImplementationDetails>::NativeDll
{
};

/* 264 */
struct EHExceptionRecord::EHParameters
{
  unsigned int magicNumber;
  void *pExceptionObject;
  _s_ThrowInfo *pThrowInfo;
};

/* 265 */
struct EHExceptionRecord
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  EHExceptionRecord::EHParameters params;
};

/* 266 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  char Data4[8];
};

/* 267 */
struct _startupinfo
{
  int newmode;
};

/* 268 */
struct _IMAGE_DOS_HEADER
{
  unsigned __int16 e_magic;
  unsigned __int16 e_cblp;
  unsigned __int16 e_cp;
  unsigned __int16 e_crlc;
  unsigned __int16 e_cparhdr;
  unsigned __int16 e_minalloc;
  unsigned __int16 e_maxalloc;
  unsigned __int16 e_ss;
  unsigned __int16 e_sp;
  unsigned __int16 e_csum;
  unsigned __int16 e_ip;
  unsigned __int16 e_cs;
  unsigned __int16 e_lfarlc;
  unsigned __int16 e_ovno;
  unsigned __int16 e_res[4];
  unsigned __int16 e_oemid;
  unsigned __int16 e_oeminfo;
  unsigned __int16 e_res2[10];
  int e_lfanew;
};

/* 269 */
struct _IMAGE_FILE_HEADER
{
  unsigned __int16 Machine;
  unsigned __int16 NumberOfSections;
  unsigned int TimeDateStamp;
  unsigned int PointerToSymbolTable;
  unsigned int NumberOfSymbols;
  unsigned __int16 SizeOfOptionalHeader;
  unsigned __int16 Characteristics;
};

/* 270 */
struct _IMAGE_DATA_DIRECTORY
{
  unsigned int VirtualAddress;
  unsigned int Size;
};

/* 271 */
struct _IMAGE_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  char MajorLinkerVersion;
  char MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned int SizeOfStackReserve;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 272 */
struct _IMAGE_NT_HEADERS
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

/* 273 */
struct _EXCEPTION_REGISTRATION_RECORD
{
  _EXCEPTION_REGISTRATION_RECORD *Next;
  _EXCEPTION_DISPOSITION (__cdecl *Handler)(_EXCEPTION_RECORD *, void *, _CONTEXT *, void *);
};

/* 275 */
union $7A727655067EA29DD1B3C3F7D79CBFD1
{
  void *FiberData;
  unsigned int Version;
};

/* 274 */
struct _NT_TIB
{
  _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *StackBase;
  void *StackLimit;
  void *SubSystemTib;
  $7A727655067EA29DD1B3C3F7D79CBFD1 ___u4;
  void *ArbitraryUserPointer;
  _NT_TIB *Self;
};

/* 276 */
struct _exception
{
  int type;
  char *name;
  long double arg1;
  long double arg2;
  long double retval;
};

/* 277 */
struct _CLIENT_ID
{
  void *UniqueProcess;
  void *UniqueThread;
};

/* 278 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 279 */
struct _PEB_LDR_DATA
{
  unsigned int Length;
  char Initialized;
  void *SsHandle;
  _LIST_ENTRY InLoadOrderModuleList;
  _LIST_ENTRY InMemoryOrderModuleList;
  _LIST_ENTRY InInitializationOrderModuleList;
  void *EntryInProgress;
};

/* 280 */
struct _PEB_FREE_BLOCK
{
  _PEB_FREE_BLOCK *Next;
  unsigned int Size;
};

/* 281 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 282 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A __s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/* 283 */
struct $B950AFB169DC87688B328897744C612F
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/* 284 */
union _ULARGE_INTEGER
{
  $B950AFB169DC87688B328897744C612F __s0;
  $B950AFB169DC87688B328897744C612F u;
  unsigned __int64 QuadPart;
};

/* 285 */
struct _UNICODE_STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  unsigned __int16 *Buffer;
};

/* 286 */
struct _PEB
{
  char InheritedAddressSpace;
  char ReadImageFileExecOptions;
  char BeingDebugged;
  char SpareBool;
  void *Mutant;
  void *ImageBaseAddress;
  _PEB_LDR_DATA *Ldr;
  struct _RTL_USER_PROCESS_PARAMETERS *ProcessParameters;
  void *SubSystemData;
  void *ProcessHeap;
  struct _RTL_CRITICAL_SECTION *FastPebLock;
  void *SparePtr1;
  void *SparePtr2;
  unsigned int EnvironmentUpdateCount;
  void *KernelCallbackTable;
  unsigned int SystemReserved[1];
  unsigned __int32 ExecuteOptions : 2;
  unsigned __int32 SpareBits : 30;
  _PEB_FREE_BLOCK *FreeList;
  unsigned int TlsExpansionCounter;
  void *TlsBitmap;
  unsigned int TlsBitmapBits[2];
  void *ReadOnlySharedMemoryBase;
  void *ReadOnlySharedMemoryHeap;
  void **ReadOnlyStaticServerData;
  void *AnsiCodePageData;
  void *OemCodePageData;
  void *UnicodeCaseTableData;
  unsigned int NumberOfProcessors;
  unsigned int NtGlobalFlag;
  _LARGE_INTEGER CriticalSectionTimeout;
  unsigned int HeapSegmentReserve;
  unsigned int HeapSegmentCommit;
  unsigned int HeapDeCommitTotalFreeThreshold;
  unsigned int HeapDeCommitFreeBlockThreshold;
  unsigned int NumberOfHeaps;
  unsigned int MaximumNumberOfHeaps;
  void **ProcessHeaps;
  void *GdiSharedHandleTable;
  void *ProcessStarterHelper;
  unsigned int GdiDCAttributeList;
  struct _RTL_CRITICAL_SECTION *LoaderLock;
  unsigned int OSMajorVersion;
  unsigned int OSMinorVersion;
  unsigned __int16 OSBuildNumber;
  unsigned __int16 OSCSDVersion;
  unsigned int OSPlatformId;
  unsigned int ImageSubsystem;
  unsigned int ImageSubsystemMajorVersion;
  unsigned int ImageSubsystemMinorVersion;
  unsigned int ImageProcessAffinityMask;
  unsigned int GdiHandleBuffer[34];
  void (__cdecl *PostProcessInitRoutine)();
  void *TlsExpansionBitmap;
  unsigned int TlsExpansionBitmapBits[32];
  unsigned int SessionId;
  _ULARGE_INTEGER AppCompatFlags;
  _ULARGE_INTEGER AppCompatFlagsUser;
  void *pShimData;
  void *AppCompatInfo;
  _UNICODE_STRING CSDVersion;
  const struct _ACTIVATION_CONTEXT_DATA *ActivationContextData;
  struct _ASSEMBLY_STORAGE_MAP *ProcessAssemblyStorageMap;
  const struct _ACTIVATION_CONTEXT_DATA *SystemDefaultActivationContextData;
  struct _ASSEMBLY_STORAGE_MAP *SystemAssemblyStorageMap;
  unsigned int MinimumStackCommit;
  void **FlsCallback;
  _LIST_ENTRY FlsListHead;
  void *FlsBitmap;
  unsigned int FlsBitmapBits[4];
  unsigned int FlsHighIndex;
};

/* 287 */
struct _ACTIVATION_CONTEXT_STACK
{
  unsigned int Flags;
  unsigned int NextCookieSequenceNumber;
  struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME *ActiveFrame;
  _LIST_ENTRY FrameListCache;
};

/* 288 */
struct _GDI_TEB_BATCH
{
  unsigned int Offset;
  unsigned int HDC;
  unsigned int Buffer[310];
};

/* 289 */
struct __declspec(align(4)) _Wx86ThreadState
{
  unsigned int *CallBx86Eip;
  void *DeallocationCpu;
  char UseKnownWx86Dll;
  char OleStubInvoked;
};

/* 290 */
struct _TEB_ACTIVE_FRAME
{
  unsigned int Flags;
  _TEB_ACTIVE_FRAME *Previous;
  _TEB_ACTIVE_FRAME_CONTEXT *Context;
};

/* 291 */
const struct _TEB_ACTIVE_FRAME_CONTEXT
{
  unsigned int Flags;
  const char *FrameName;
};

/* 292 */
struct _TEB
{
  _NT_TIB NtTib;
  void *EnvironmentPointer;
  _CLIENT_ID ClientId;
  void *ActiveRpcHandle;
  void *ThreadLocalStoragePointer;
  _PEB *ProcessEnvironmentBlock;
  unsigned int LastErrorValue;
  unsigned int CountOfOwnedCriticalSections;
  void *CsrClientThread;
  void *Win32ThreadInfo;
  unsigned int User32Reserved[26];
  unsigned int UserReserved[5];
  void *WOW32Reserved;
  unsigned int CurrentLocale;
  unsigned int FpSoftwareStatusRegister;
  void *SystemReserved1[54];
  int ExceptionCode;
  _ACTIVATION_CONTEXT_STACK ActivationContextStack;
  char SpareBytes1[24];
  _GDI_TEB_BATCH GdiTebBatch;
  _CLIENT_ID RealClientId;
  void *GdiCachedProcessHandle;
  unsigned int GdiClientPID;
  unsigned int GdiClientTID;
  void *GdiThreadLocalInfo;
  unsigned int Win32ClientInfo[62];
  void *glDispatchTable[233];
  unsigned int glReserved1[29];
  void *glReserved2;
  void *glSectionInfo;
  void *glSection;
  void *glTable;
  void *glCurrentRC;
  void *glContext;
  unsigned int LastStatusValue;
  _UNICODE_STRING StaticUnicodeString;
  wchar_t StaticUnicodeBuffer[261];
  void *DeallocationStack;
  void *TlsSlots[64];
  _LIST_ENTRY TlsLinks;
  void *Vdm;
  void *ReservedForNtRpc;
  void *DbgSsReserved[2];
  unsigned int HardErrorMode;
  void *Instrumentation[16];
  void *WinSockData;
  unsigned int GdiBatchCount;
  char InDbgPrint;
  char FreeStackOnTermination;
  char HasFiberData;
  char IdealProcessor;
  unsigned int Spare3;
  void *ReservedForPerf;
  void *ReservedForOle;
  unsigned int WaitingOnLoaderLock;
  _Wx86ThreadState Wx86Thread;
  void **TlsExpansionSlots;
  unsigned int ImpersonationLocale;
  unsigned int IsImpersonating;
  void *NlsCache;
  void *pShimData;
  unsigned int HeapVirtualAffinity;
  void *CurrentTransactionHandle;
  _TEB_ACTIVE_FRAME *ActiveFrame;
  void *FlsData;
};

/* 293 */
struct _FILETIME
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/* 294 */
union FT
{
  unsigned __int64 ft_scalar;
  _FILETIME ft_struct;
};

/* 295 */
union __m128
{
  float m128_f32[4];
  unsigned __int64 m128_u64[2];
  char m128_i8[16];
  __int16 m128_i16[8];
  int m128_i32[4];
  __int64 m128_i64[2];
  char m128_u8[16];
  unsigned __int16 m128_u16[8];
  unsigned int m128_u32[4];
};

/* 296 */
union __m64
{
  unsigned __int64 m64_u64;
  float m64_f32[2];
  char m64_i8[8];
  __int16 m64_i16[4];
  int m64_i32[2];
  __int64 m64_i64;
  char m64_u8[8];
  unsigned __int16 m64_u16[4];
  unsigned int m64_u32[2];
};

/* 297 */
union $22971E98F1DCAE471B592EC18ECB1551
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/* 298 */
struct _IMAGE_SECTION_HEADER
{
  char Name[8];
  $22971E98F1DCAE471B592EC18ECB1551 Misc;
  unsigned int VirtualAddress;
  unsigned int SizeOfRawData;
  unsigned int PointerToRawData;
  unsigned int PointerToRelocations;
  unsigned int PointerToLinenumbers;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int Characteristics;
};

/* 299 */
struct LIST_ENTRY32
{
  unsigned int Flink;
  unsigned int Blink;
};

/* 300 */
struct _KSYSTEM_TIME
{
  unsigned int LowPart;
  int High1Time;
  int High2Time;
};

/* 301 */
union __unaligned __declspec(align(4)) $B748606D7B8FD1BC3EF90B5DB57F4A07
{
  _KSYSTEM_TIME TickCount;
  volatile unsigned __int64 TickCountQuad;
};

/* 302 */
struct __declspec(align(8)) _KUSER_SHARED_DATA
{
  unsigned int TickCountLowDeprecated;
  unsigned int TickCountMultiplier;
  _KSYSTEM_TIME InterruptTime;
  _KSYSTEM_TIME SystemTime;
  _KSYSTEM_TIME TimeZoneBias;
  unsigned __int16 ImageNumberLow;
  unsigned __int16 ImageNumberHigh;
  wchar_t NtSystemRoot[260];
  unsigned int MaxStackTraceDepth;
  unsigned int CryptoExponent;
  unsigned int TimeZoneId;
  unsigned int LargePageMinimum;
  unsigned int Reserved2[7];
  _NT_PRODUCT_TYPE NtProductType;
  char ProductTypeIsValid;
  unsigned int NtMajorVersion;
  unsigned int NtMinorVersion;
  char ProcessorFeatures[64];
  unsigned int Reserved1;
  unsigned int Reserved3;
  volatile unsigned int TimeSlip;
  _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
  _LARGE_INTEGER SystemExpirationDate;
  unsigned int SuiteMask;
  char KdDebuggerEnabled;
  volatile unsigned int ActiveConsoleId;
  volatile unsigned int DismountCount;
  unsigned int ComPlusPackage;
  unsigned int LastSystemRITEventTickCount;
  unsigned int NumberOfPhysicalPages;
  char SafeBootMode;
  unsigned int TraceLogging;
  unsigned __int64 Fill0;
  unsigned __int64 SystemCall[4];
  $B748606D7B8FD1BC3EF90B5DB57F4A07 ___u34;
};

/* 303 */
struct LIST_ENTRY64
{
  unsigned __int64 Flink;
  unsigned __int64 Blink;
};

/* 304 */
struct _RTC_ALLOCA_NODE
{
  int guard1;
  _RTC_ALLOCA_NODE *next;
  int dummypad;
  unsigned int allocaSize;
  int dummypad2;
  int guard2[3];
};

/* 305 */
struct _RTC_vardesc
{
  int addr;
  int size;
  char *name;
};

/* 306 */
struct _RTC_framedesc
{
  int varCount;
  _RTC_vardesc *variables;
};

/* 307 */
struct HINSTANCE__
{
  int unused;
};

/* 308 */
struct $F4F61FAD306C4F757C134E9F853280B2
{
  __int8 fVirtual : 1;
  __int8 pad : 7;
};

/* 309 */
union $B3272559D3D8497712AC6731299FE261
{
  char grFlags;
  $F4F61FAD306C4F757C134E9F853280B2 __s1;
};

/* 310 */
struct __declspec(align(2)) SrcHeader
{
  unsigned int cb;
  unsigned int ver;
  unsigned int sig;
  unsigned int cbSource;
  char srccompress;
  $B3272559D3D8497712AC6731299FE261 ___u5;
  char szNames[1];
};

/* 311 */
union $3AD4F131CA8543D9E88BC26A1B5980C5
{
  void *pvReserved1;
  __int64 pv64Reserved2;
};

/* 312 */
struct SrcHeaderOut
{
  unsigned int cb;
  unsigned int ver;
  unsigned int sig;
  unsigned int cbSource;
  unsigned int niFile;
  unsigned int niObj;
  unsigned int niVirt;
  char srccompress;
  $B3272559D3D8497712AC6731299FE261 ___u8;
  __int16 sPad;
  $3AD4F131CA8543D9E88BC26A1B5980C5 ___u10;
};

/* 313 */
struct SrcHeaderW
{
  unsigned int cb;
  unsigned int ver;
  unsigned int sig;
  unsigned int cbSource;
  char srccompress;
  $B3272559D3D8497712AC6731299FE261 ___u5;
  wchar_t szNames[1];
};

/* 314 */
struct $A5065A572BA177C92762CEFE1B824992
{
  unsigned int dwLowDateTime;
  unsigned int dwHighDateTime;
};

/* 315 */
struct SrcHeaderBlock
{
  int ver;
  int cb;
  $A5065A572BA177C92762CEFE1B824992 ft;
  int age;
  char rgbPad[44];
};

/* 316 */
struct Enum
{
  EnumVtbl *vfptr;
};

/* 317 */
struct EnumVtbl
{
  void (__thiscall *release)(Enum *this);
  void (__thiscall *reset)(Enum *this);
  int (__thiscall *next)(Enum *this);
};

/* 318 */
struct __cppobj EnumThunk : Enum
{
};

/* 319 */
struct TYPTYPE
{
  unsigned __int16 len;
  unsigned __int16 leaf;
  char data[];
};

/* 320 */
struct CV_Column_t
{
  unsigned __int16 offColumnStart;
  unsigned __int16 offColumnEnd;
};

/* 321 */
struct LinkInfo
{
  unsigned int cb;
  unsigned int ver;
  unsigned int offszCwd;
  unsigned int offszCommand;
  unsigned int ichOutfile;
  unsigned int offszLibs;
};

/* 322 */
struct __cppobj LinkInfoW : LinkInfo
{
};

/* 323 */
struct HKEY__
{
  int unused;
};

/* 324 */
struct _MEMORY_BASIC_INFORMATION
{
  void *BaseAddress;
  void *AllocationBase;
  unsigned int AllocationProtect;
  unsigned int RegionSize;
  unsigned int State;
  unsigned int Protect;
  unsigned int Type;
};

/* 325 */
struct Dbg
{
  DbgVtbl *vfptr;
};

/* 326 */
struct DbgVtbl
{
  int (__thiscall *Close)(Dbg *this);
  _BYTE gap4[4];
  void (__thiscall *Reset)(Dbg *this);
  int (__thiscall *Skip)(Dbg *this, unsigned int);
  int (__thiscall *QueryNext)(Dbg *this, unsigned int, void *);
  int (__thiscall *Find)(Dbg *this, void *);
  int (__thiscall *Clear)(Dbg *this);
  int (__thiscall *Append)(Dbg *this, unsigned int, const void *);
  int (__thiscall *ReplaceNext)(Dbg *this, unsigned int, const void *);
  int (__thiscall *Clone)(Dbg *this, Dbg **);
  int (__thiscall *QueryElementSize)(Dbg *this);
};

/* 327 */
struct PDB
{
  PDBVtbl *vfptr;
};

/* 328 */
struct DBI
{
  DBIVtbl *vfptr;
};

/* 329 */
struct Mod
{
  ModVtbl *vfptr;
};

/* 330 */
struct TPI
{
  TPIVtbl *vfptr;
};

/* 331 */
struct TPIVtbl
{
  unsigned int (__thiscall *QueryInterfaceVersion)(TPI *this);
  _BYTE gap4[8];
  int (__thiscall *QueryCVRecordForTi16)(TPI *this, unsigned __int16, char *, int *);
  int (__thiscall *QueryPbCVRecordForTi16)(TPI *this, unsigned __int16, char **);
  unsigned __int16 (__thiscall *QueryTi16Min)(TPI *this);
  unsigned __int16 (__thiscall *QueryTi16Mac)(TPI *this);
  int (__thiscall *QueryCb)(TPI *this);
  int (__thiscall *Close)(TPI *this);
  int (__thiscall *Commit)(TPI *this);
  int (__thiscall *QueryTi16ForUDT)(TPI *this, const char *, int, unsigned __int16 *);
  int (__thiscall *SupportQueryTiForUDT)(TPI *this);
  int (__thiscall *fIs16bitTypePool)(TPI *this);
  int (__thiscall *QueryTiForUDT)(TPI *this, const char *, int, unsigned int *);
  int (__thiscall *QueryTiForCVRecord)(TPI *this, char *, unsigned int *);
  int (__thiscall *QueryCVRecordForTi)(TPI *this, unsigned int, char *, int *);
  int (__thiscall *QueryPbCVRecordForTi)(TPI *this, unsigned int, char **);
  unsigned int (__thiscall *QueryTiMin)(TPI *this);
  unsigned int (__thiscall *QueryTiMac)(TPI *this);
  int (__thiscall *AreTypesEqual)(TPI *this, unsigned int, unsigned int);
  int (__thiscall *IsTypeServed)(TPI *this, unsigned int);
  int (__thiscall *QueryTiForUDTW)(TPI *this, const wchar_t *, int, unsigned int *);
};

/* 332 */
struct __cppobj EnumLines : Enum
{
};

/* 333 */
struct ModVtbl
{
  unsigned int (__thiscall *QueryInterfaceVersion)(Mod *this);
  _BYTE gap4[16];
  int (__thiscall *AddLines)(Mod *this, const char *, unsigned __int16, int, int, int, unsigned __int16, char *, int);
  int (__thiscall *AddSecContrib)(Mod *this, unsigned __int16, int, int, unsigned int);
  int (__thiscall *QueryCBName)(Mod *this, int *);
  int (__thiscall *QueryName)(Mod *this, char *, int *);
  int (__thiscall *QuerySymbols)(Mod *this, char *, int *);
  int (__thiscall *QueryLines)(Mod *this, char *, int *);
  int (__thiscall *SetPvClient)(Mod *this, void *);
  int (__thiscall *GetPvClient)(Mod *this, void **);
  int (__thiscall *QueryFirstCodeSecContrib)(Mod *this, unsigned __int16 *, int *, int *, unsigned int *);
  int (__thiscall *QueryImod)(Mod *this, unsigned __int16 *);
  int (__thiscall *QueryDBI)(Mod *this, DBI **);
  int (__thiscall *Close)(Mod *this);
  int (__thiscall *QueryCBFile)(Mod *this, int *);
  int (__thiscall *QueryFile)(Mod *this, char *, int *);
  int (__thiscall *QueryTpi)(Mod *this, TPI **);
  int (__thiscall *AddSecContribEx)(Mod *this, unsigned __int16, int, int, unsigned int, unsigned int, unsigned int);
  int (__thiscall *QueryItsm)(Mod *this, unsigned __int16 *);
  int (__thiscall *QuerySrcFile)(Mod *this, char *, int *);
  int (__thiscall *QuerySupportsEC)(Mod *this);
  int (__thiscall *QueryPdbFile)(Mod *this, char *, int *);
  int (__thiscall *ReplaceLines)(Mod *this, char *, int);
  bool (__thiscall *GetEnumLines)(Mod *this, EnumLines **);
  bool (__thiscall *QueryLineFlags)(Mod *this, unsigned int *);
  bool (__thiscall *QueryFileNameInfo)(Mod *this, unsigned int, wchar_t *, unsigned int *, unsigned int *, char *, unsigned int *);
  int (__thiscall *AddPublicW)(Mod *this, const wchar_t *, unsigned __int16, int, unsigned int);
  int (__thiscall *AddLinesW)(Mod *this, const wchar_t *, unsigned __int16, int, int, int, unsigned int, char *, int);
  int (__thiscall *QueryNameW)(Mod *this, wchar_t *, int *);
  int (__thiscall *QueryFileW)(Mod *this, wchar_t *, int *);
  int (__thiscall *QuerySrcFileW)(Mod *this, wchar_t *, int *);
  int (__thiscall *QueryPdbFileW)(Mod *this, wchar_t *, int *);
  int (__thiscall *AddPublic2)(Mod *this, const char *, unsigned __int16, int, unsigned int);
  int (__thiscall *InsertLines)(Mod *this, char *, int);
  int (__thiscall *QueryLines2)(Mod *this, int, char *, int *);
};

/* 334 */
struct GSI
{
  GSIVtbl *vfptr;
};

/* 335 */
struct __cppobj EnumSyms : Enum
{
};

/* 336 */
struct GSIVtbl
{
  unsigned int (__thiscall *QueryInterfaceVersion)(GSI *this);
  _BYTE gap4[4];
  char *(__thiscall *NextSym)(GSI *this, char *);
  char *(__thiscall *HashSym)(GSI *this, const char *, char *);
  char *(__thiscall *NearestSym)(GSI *this, unsigned __int16, int, int *);
  int (__thiscall *Close)(GSI *this);
  int (__thiscall *getEnumThunk)(GSI *this, unsigned __int16, int, EnumThunk **);
  unsigned int (__thiscall *OffForSym)(GSI *this, char *);
  char *(__thiscall *SymForOff)(GSI *this, unsigned int);
  char *(__thiscall *HashSymW)(GSI *this, const wchar_t *, char *);
  int (__thiscall *getEnumByAddr)(GSI *this, EnumSyms **);
};

/* 337 */
struct SO
{
  int off;
  unsigned __int16 isect;
  unsigned __int16 pad;
};

/* 338 */
struct DBIVtbl
{
  unsigned int (__thiscall *QueryImplementationVersion)(DBI *this);
  _BYTE gap4[28];
  int (__thiscall *QueryModFromAddr)(DBI *this, unsigned __int16, int, Mod **, unsigned __int16 *, int *, int *);
  int (__thiscall *QuerySecMap)(DBI *this, char *, int *);
  int (__thiscall *QueryFileInfo)(DBI *this, char *, int *);
  void (__thiscall *DumpMods)(DBI *this);
  void (__thiscall *DumpSecContribs)(DBI *this);
  void (__thiscall *DumpSecMap)(DBI *this);
  int (__thiscall *Close)(DBI *this);
  int (__thiscall *AddThunkMap)(DBI *this, int *, unsigned int, int, SO *, unsigned int, unsigned __int16, int);
  int (__thiscall *AddPublic)(DBI *this, const char *, unsigned __int16, int);
  int (__thiscall *getEnumContrib)(DBI *this, Enum **);
  int (__thiscall *QueryTypeServer)(DBI *this, char, TPI **);
  int (__thiscall *QueryItsmForTi)(DBI *this, unsigned int, char *);
  int (__thiscall *QueryNextItsm)(DBI *this, char, char *);
  int (__thiscall *QueryLazyTypes)(DBI *this);
  int (__thiscall *SetLazyTypes)(DBI *this, int);
  int (__thiscall *FindTypeServers)(DBI *this, int *, char *);
  void (__thiscall *DumpTypeServers)(DBI *this);
  int (__thiscall *OpenDbg)(DBI *this, DBGTYPE, Dbg **);
  int (__thiscall *QueryDbgTypes)(DBI *this, DBGTYPE *, int *);
  int (__thiscall *QueryAddrForSec)(DBI *this, unsigned __int16 *, int *, unsigned __int16, int, unsigned int, unsigned int);
  int (__thiscall *QueryAddrForSecEx)(DBI *this, unsigned __int16 *, int *, unsigned __int16, int, unsigned int, unsigned int, unsigned int);
  int (__thiscall *QuerySupportsEC)(DBI *this);
  int (__thiscall *QueryPdb)(DBI *this, PDB **);
  int (__thiscall *AddLinkInfo)(DBI *this, LinkInfo *);
  int (__thiscall *QueryLinkInfo)(DBI *this, LinkInfo *, int *);
  unsigned int (__thiscall *QueryAge)(DBI *this);
  void *(__thiscall *QueryHeader)(DBI *this);
  void (__thiscall *FlushTypeServers)(DBI *this);
  int (__thiscall *QueryTypeServerByPdb)(DBI *this, const char *, char *);
  int (__thiscall *OpenModW)(DBI *this, const wchar_t *, const wchar_t *, Mod **);
  int (__thiscall *DeleteModW)(DBI *this, const wchar_t *);
  int (__thiscall *AddPublicW)(DBI *this, const wchar_t *, unsigned __int16, int, unsigned int);
  int (__thiscall *QueryTypeServerByPdbW)(DBI *this, const wchar_t *, char *);
  int (__thiscall *AddLinkInfoW)(DBI *this, LinkInfoW *);
  int (__thiscall *AddPublic2)(DBI *this, const char *, unsigned __int16, int, unsigned int);
  unsigned __int16 (__thiscall *QueryMachineType)(DBI *this);
  void (__thiscall *SetMachineType)(DBI *this, unsigned __int16);
  void (__thiscall *RemoveDataForRva)(DBI *this, unsigned int, unsigned int);
  int (__thiscall *FStripped)(DBI *this);
  int (__thiscall *QueryModFromAddr2)(DBI *this, unsigned __int16, int, Mod **, unsigned __int16 *, int *, int *, unsigned int *);
  int (__thiscall *QueryNoOfMods)(DBI *this, int *);
  int (__thiscall *QueryMods)(DBI *this, Mod **, int);
  int (__thiscall *QueryImodFromAddr)(DBI *this, unsigned __int16, int, unsigned __int16 *, unsigned __int16 *, int *, int *, unsigned int *);
  int (__thiscall *OpenModFromImod)(DBI *this, unsigned __int16, Mod **);
  int (__thiscall *QueryHeader2)(DBI *this, int, char *, int *);
  int (__thiscall *FAddSourceMappingItem)(DBI *this, const wchar_t *, const wchar_t *, unsigned int);
  int (__thiscall *FSetPfnNotePdbUsed)(DBI *this, void *, void (__cdecl *)(void *, const wchar_t *, int, int));
  int (__thiscall *FCTypes)(DBI *this);
  int (__thiscall *QueryFileInfo2)(DBI *this, char *, int *);
  int (__thiscall *FSetPfnQueryCallback)(DBI *this, void *, int (__cdecl *(__cdecl *)(void *, DOVC))());
};

/* 339 */
struct Stream
{
  StreamVtbl *vfptr;
};

/* 340 */
struct StreamVtbl
{
  int (__thiscall *QueryCb)(Stream *this);
  _BYTE gap4[4];
  int (__thiscall *Write)(Stream *this, int, void *, int);
  int (__thiscall *Replace)(Stream *this, void *, int);
  int (__thiscall *Append)(Stream *this, void *, int);
  int (__thiscall *Delete)(Stream *this);
  int (__thiscall *Release)(Stream *this);
  int (__thiscall *Read2)(Stream *this, int, void *, int);
  int (__thiscall *Truncate)(Stream *this, int);
};

/* 341 */
struct _tagSEARCHDEBUGINFO
{
  unsigned int cb;
  int fMainDebugFile;
  char *szMod;
  char *szLib;
  char *szObj;
  char **rgszTriedThese;
  char szValidatedFile[260];
  int (__stdcall *pfnValidateDebugInfoFile)(const char *, unsigned int *);
  char *szExe;
};

/* 342 */
struct Src
{
  SrcVtbl *vfptr;
};

/* 343 */
struct __cppobj EnumSrc : Enum
{
};

/* 344 */
struct SrcVtbl
{
  bool (__thiscall *Close)(Src *this);
  __declspec(align(8)) bool (__thiscall *Remove)(Src *this, const char *);
  bool (__thiscall *QueryByName)(Src *this, const char *, SrcHeaderOut *);
  bool (__thiscall *GetData)(Src *this, SrcHeaderOut *, void *);
  bool (__thiscall *GetEnum)(Src *this, EnumSrc **);
  bool (__thiscall *GetHeaderBlock)(Src *this, SrcHeaderBlock *);
  bool (__thiscall *RemoveW)(Src *this, wchar_t *);
  bool (__thiscall *QueryByNameW)(Src *this, wchar_t *, SrcHeaderOut *);
  bool (__thiscall *AddW)(Src *this, SrcHeaderW *, const void *);
};

/* 345 */
struct PDBVtbl
{
  unsigned int (__thiscall *QueryInterfaceVersion)(PDB *this);
  _BYTE gap4[12];
  unsigned int (__thiscall *QuerySignature)(PDB *this);
  unsigned int (__thiscall *QueryAge)(PDB *this);
  int (__thiscall *CreateDBI)(PDB *this, const char *, DBI **);
  int (__thiscall *OpenDBI)(PDB *this, const char *, const char *, DBI **);
  int (__thiscall *OpenTpi)(PDB *this, const char *, TPI **);
  int (__thiscall *Commit)(PDB *this);
  int (__thiscall *Close)(PDB *this);
  int (__thiscall *OpenStream)(PDB *this, const char *, Stream **);
  int (__thiscall *GetEnumStreamNameMap)(PDB *this, Enum **);
  int (__thiscall *GetRawBytes)(PDB *this, int (__cdecl *)(const void *, int));
  unsigned int (__thiscall *QueryPdbImplementationVersion)(PDB *this);
  int (__thiscall *OpenDBIEx)(PDB *this, const char *, const char *, DBI **, int (__stdcall *)(_tagSEARCHDEBUGINFO *));
  int (__thiscall *CopyTo)(PDB *this, const char *, unsigned int, unsigned int);
  int (__thiscall *OpenSrc)(PDB *this, Src **);
  int (__thiscall *QueryLastErrorExW)(PDB *this, wchar_t *, unsigned int);
  wchar_t *(__thiscall *QueryPDBNameExW)(PDB *this, wchar_t *, unsigned int);
  int (__thiscall *QuerySignature2)(PDB *this, _GUID *);
  int (__thiscall *CopyToW)(PDB *this, const wchar_t *, unsigned int, unsigned int);
  int (__thiscall *fIsSZPDB)(PDB *this);
  int (__thiscall *OpenStreamW)(PDB *this, const wchar_t *, Stream **);
  int (__thiscall *CopyToW2)(PDB *this, const wchar_t *, unsigned int, int (__cdecl *(__cdecl *)(void *, PCC))(), void *);
  int (__thiscall *OpenStreamEx)(PDB *this, const char *, const char *, Stream **);
  int (__thiscall *RegisterPDBMapping)(PDB *this, const wchar_t *, const wchar_t *);
};

/* 346 */
struct IPDBError
{
  IPDBErrorVtbl *vfptr;
};

/* 347 */
struct IPDBErrorVtbl
{
  int (__thiscall *QueryLastError)(IPDBError *this, wchar_t *, unsigned int);
  void (__thiscall *SetLastError)(IPDBError *this, int, const wchar_t *);
  void (__thiscall *Destroy)(IPDBError *this);
};

/* 348 */
struct SYMTYPE
{
  unsigned __int16 reclen;
  unsigned __int16 rectyp;
  char data[];
};

/* 349 */
struct CV_Line_t
{
  unsigned int offset;
  unsigned __int32 linenumStart : 24;
  unsigned __int32 deltaLineEnd : 7;
  unsigned __int32 fStatement : 1;
};

/* 350 */
struct $F49258853DEB26A691BF42EC51DEEB49
{
  const char *szName;
  unsigned int dwThreadID;
  unsigned int dwFlags;
};

/* 351 */
struct $ACC2D7BA72D8B5F31F315901218BB50A
{
  unsigned int dwLevelRequired;
  char *pbDebuggerPresent;
};

/* 352 */
struct $C98644B53BFCB8058A8635BFBD9C27B0
{
  unsigned int dwRuntimeNumber;
  int bRealBug;
  void *pvReturnAddress;
  char *pbDebuggerPresent;
  const wchar_t *pwRuntimeMessage;
};

/* 353 */
union $FD995641D516239A34B3D321A0389342
{
  $F49258853DEB26A691BF42EC51DEEB49 SetName;
  $ACC2D7BA72D8B5F31F315901218BB50A DebuggerProbe;
  $C98644B53BFCB8058A8635BFBD9C27B0 RuntimeError;
};

/* 354 */
struct tagEXCEPTION_VISUALCPP_DEBUG_INFO
{
  unsigned int dwType;
  $FD995641D516239A34B3D321A0389342 ___u1;
};

/* 356 */
typedef char *LPBYTE;

/* 357 */
typedef HKEY__ **PHKEY;

/* 358 */
typedef void (__stdcall *PIMAGE_TLS_CALLBACK)(void *, unsigned int, void *);

/* 359 */
typedef int (__stdcall *FARPROC)();

/* 360 */
typedef _PEB_LDR_DATA *PPEB_LDR_DATA;

/* 361 */
typedef bool _Bool;

/* 362 */
typedef unsigned int UINT;

/* 363 */
typedef unsigned int *PULONG;

/* 364 */
typedef _TEB_ACTIVE_FRAME *PTEB_ACTIVE_FRAME;

/* 365 */
typedef _EXCEPTION_REGISTRATION_RECORD *PEXCEPTION_REGISTRATION_RECORD;

/* 366 */
typedef int HRESULT;

/* 367 */
typedef LIST_ENTRY32 *PLIST_ENTRY32;

/* 368 */
typedef unsigned int uintptr_t;

/* 369 */
typedef void (__stdcall *PTP_CLEANUP_GROUP_CANCEL_CALLBACK)(void *, void *);

/* 370 */
typedef char *va_list;

/* 371 */
typedef _EXCEPTION_POINTERS *LPEXCEPTION_POINTERS;

/* 372 */
typedef unsigned int CV_typ_t;

/* 373 */
typedef char BYTE;

/* 374 */
typedef void *PVOID;

/* 375 */
typedef int (__stdcall *RegQueryValueExWProc)(HKEY__ *, const wchar_t *, unsigned int *, unsigned int *, char *, unsigned int *);

/* 376 */
typedef unsigned int AGE;

/* 377 */
typedef _GUID *PCSIG70;

/* 378 */
typedef unsigned __int64 DWORDLONG;

/* 379 */
typedef _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;

/* 380 */
typedef const void *LPCVOID;

/* 381 */
typedef int NTSTATUS;

/* 382 */
typedef __int64 LONGLONG;

/* 383 */
typedef unsigned __int64 ULONGLONG;

/* 384 */
typedef __int64 _Longlong;

/* 385 */
typedef __int64 streamsize;

/* 386 */
typedef unsigned __int16 wint_t;

/* 387 */
typedef LIST_ENTRY64 *PLIST_ENTRY64;

/* 388 */
typedef threadmbcinfostruct *pthreadmbcinfo;

/* 389 */
typedef unsigned int IMPV;

/* 390 */
typedef unsigned __int16 WORD;

/* 391 */
typedef unsigned __int16 USHORT;

/* 392 */
typedef __int16 _Null_type;

/* 393 */
typedef void **PPVOID;

/* 394 */
typedef __int16 nullptr_t;

/* 395 */
typedef void *LPVOID;

/* 396 */
typedef const wchar_t *_Dbfile_t;

/* 397 */
typedef int LONG;

/* 398 */
typedef _EXCEPTION_RECORD *PEXCEPTION_RECORD;

/* 399 */
typedef __int64 time_t;

/* 400 */
typedef threadlocaleinfostruct *pthreadlocinfo;

/* 401 */
typedef _FILETIME *LPFILETIME;

/* 402 */
typedef char CHAR;

/* 403 */
typedef int (__cdecl *(__cdecl *PfnPDBCopyQueryCallback)(void *, PCC))();

/* 404 */
typedef void (__cdecl *PFNNOTEPDBUSED)(void *, const wchar_t *, int, int);

/* 405 */
typedef const char *SZ_CONST;

/* 406 */
typedef SrcHeaderW *PCSrcHeaderW;

/* 407 */
typedef _NT_TIB *PNT_TIB;

/* 408 */
typedef unsigned int INTV;

/* 409 */
typedef int (__stdcall *LPTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 410 */
typedef _tagSEARCHDEBUGINFO *PSEARCHDEBUGINFO;

/* 411 */
typedef unsigned int TP_VERSION;

/* 412 */
typedef unsigned int size_t;

/* 413 */
typedef unsigned int SIZE_T;

/* 414 */
typedef int EC;

/* 415 */
typedef int (__cdecl *(__cdecl *PFNDBIQUERYCALLBACK)(void *, DOVC))();

/* 416 */
typedef unsigned int *PUINT_PTR;

/* 417 */
typedef char ITSM;

/* 418 */
typedef int (__stdcall *PFNVALIDATEDEBUGINFOFILE)(const char *, unsigned int *);

/* 419 */
typedef unsigned int REGSAM;

/* 420 */
typedef int (__cdecl *PDBCOPYCALLBACK)();

/* 421 */
typedef unsigned int UINT_PTR;

/* 422 */
typedef int (__cdecl *(__cdecl *PfnPDBQueryCallback)(void *, POVC))();

/* 423 */
typedef char _TSCHAR;

/* 424 */
typedef void (__cdecl *_PVFV)();

/* 425 */
typedef int (__cdecl *DBICALLBACK)();

/* 426 */
typedef unsigned int DWORD;

/* 427 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS;

/* 428 */
typedef HINSTANCE__ *HMODULE;

/* 429 */
typedef unsigned int CV_pubsymflag_t;

/* 430 */
typedef localeinfo_struct *_locale_t;

/* 431 */
typedef _GUID *PSIG70;

/* 432 */
typedef int *_Bool_type;

/* 433 */
typedef const char *PCSTR;

/* 434 */
typedef unsigned __int16 TI16;

/* 435 */
typedef char *PBYTE;

/* 436 */
typedef unsigned int *LPDWORD;

/* 437 */
typedef int LSTATUS;

/* 438 */
typedef unsigned __int64 ULONG64;

/* 439 */
typedef unsigned int DWORD_PTR;

/* 440 */
typedef LinkInfo *PLinkInfo;

/* 441 */
typedef _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;

/* 442 */
typedef void (__cdecl *PPS_POST_PROCESS_INIT_ROUTINE)();

/* 443 */
typedef SrcHeaderOut *PSrcHeaderOut;

/* 444 */
typedef int (__cdecl *PFNfReadPDBRawBytes)(const void *, int);

/* 445 */
typedef _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;

/* 446 */
typedef unsigned int LCID;

/* 447 */
typedef char *LPSTR;

/* 448 */
typedef int (*_RTC_error_fnW)(int, const wchar_t *, int, const wchar_t *, const wchar_t *, ...);

/* 449 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER;

/* 450 */
typedef wchar_t *PUWSTR;

/* 451 */
typedef __int64 fpos_t;

/* 452 */
typedef int (__stdcall *PTOP_LEVEL_EXCEPTION_FILTER)(_EXCEPTION_POINTERS *);

/* 453 */
typedef SrcHeaderOut *PCSrcHeaderOut;

/* 454 */
typedef _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;

/* 455 */
typedef _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;

/* 456 */
typedef _CONTEXT *PCONTEXT;

/* 457 */
typedef int (__cdecl *_onexit_t)();

/* 458 */
typedef unsigned int rsize_t;

/* 459 */
typedef int (__cdecl *_PIFV)();

/* 460 */
typedef int mbstate_t;

/* 461 */
typedef int (*WSPRINTF_FP)(char *, const char *, ...);

/* 462 */
typedef _TP_CALLBACK_INSTANCE *PTP_CALLBACK_INSTANCE;

/* 463 */
typedef int (__stdcall *RegCloseKeyProc)(HKEY__ *);

/* 464 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

/* 465 */
typedef SrcHeader *PCSrcHeader;

/* 466 */
typedef int (__cdecl *PfnPDBExportValidateInterface)(unsigned int);

/* 467 */
typedef void (__cdecl *_PMFN)();

/* 468 */
typedef IPDBError *(__cdecl *PfnPDBErrorCreate)(PDB *);

/* 469 */
typedef HINSTANCE__ *HINSTANCE;

/* 470 */
typedef const char *LPCTSTR;

/* 471 */
typedef int _Mbstatet;

/* 472 */
typedef unsigned int ACCESS_MASK;

/* 473 */
typedef int (__stdcall *PfnFindDebugInfoFile)(_tagSEARCHDEBUGINFO *);

/* 474 */
typedef void (__fastcall *PCOOKIE_CHECK)(unsigned int);

/* 475 */
typedef void (__stdcall *PTP_SIMPLE_CALLBACK)(_TP_CALLBACK_INSTANCE *, void *);

/* 476 */
typedef _TP_CALLBACK_ENVIRON_V1 *PTP_CALLBACK_ENVIRON;

/* 477 */
typedef unsigned int SIG;

/* 478 */
typedef unsigned __int16 *PWSTR;

/* 479 */
typedef const char *LPCSTR;

/* 480 */
typedef int errno_t;

/* 481 */
typedef int LONG_PTR;

/* 482 */
typedef unsigned int TI;

/* 483 */
typedef int (*_RTC_error_fn)(int, const char *, int, const char *, const char *, ...);

/* 484 */
typedef void *HANDLE;

/* 485 */
typedef int (__stdcall *RegOpenKeyExWProc)(HKEY__ *, const wchar_t *, unsigned int, unsigned int, HKEY__ **);

/* 486 */
typedef unsigned int GDI_HANDLE_BUFFER[34];

/* 487 */
typedef unsigned int _Dbline_t;

/* 488 */
typedef unsigned __int16 CV_typ16_t;

/* 489 */
typedef __int64 streamoff;

/* 490 */
typedef int (__cdecl *PDBOpenValidate5Proc)(const wchar_t *, const wchar_t *, void *, int (__cdecl *(__cdecl *)(void *, POVC))(), int *, wchar_t *, unsigned int, PDB **);

/* 491 */
typedef _TP_CLEANUP_GROUP *PTP_CLEANUP_GROUP;

/* 492 */
typedef const wchar_t *PCUWSTR;

/* 493 */
typedef HKEY__ *HKEY;

/* 494 */
typedef _PEB *PPEB;

/* 495 */
typedef _EXCEPTION_DISPOSITION (__cdecl *PEXCEPTION_ROUTINE)(_EXCEPTION_RECORD *, void *, _CONTEXT *, void *);

/* 496 */
typedef LinkInfoW *PLinkInfoW;

/* 497 */
typedef unsigned int ULONG_PTR;

/* 498 */
typedef int BOOL;

/* 499 */
typedef int *LPBOOL;

/* 500 */
typedef _TEB_ACTIVE_FRAME_CONTEXT *PCTEB_ACTIVE_FRAME_CONTEXT;

/* 501 */
typedef __int64 __time64_t;

/* 502 */
typedef char UCHAR;

/* 503 */
typedef const wchar_t *LPCWSTR;

/* 504 */
typedef wchar_t *LPWSTR;

/* 505 */
typedef _PEB_FREE_BLOCK *PPEB_FREE_BLOCK;

/* 506 */
typedef int *PLONG;

/* 507 */
typedef unsigned int ULONG;

/* 508 */
typedef char *LPTSTR;

/* 509 */
typedef void (__cdecl *PMFN)();

/* 510 */
typedef int ptrdiff_t;

/* 511 */
typedef int (__cdecl *PDBCALLBACK)();

/* 512 */
typedef char BOOLEAN;

/* 513 */
typedef unsigned __int16 CV_columnpos_t;

/* 514 */
typedef _TP_POOL *PTP_POOL;

/* 515 */
typedef _GUID GUID;

/* 516 */
struct _EH4_SCOPETABLE_RECORD
{
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 517 */
struct _EH4_SCOPETABLE
{
  DWORD GSCookieOffset;
  DWORD GSCookieXOROffset;
  DWORD EHCookieOffset;
  DWORD EHCookieXOROffset;
  struct _EH4_SCOPETABLE_RECORD ScopeRecord[];
};

/* 518 */
typedef struct _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 519 */
struct _EH3_EXCEPTION_REGISTRATION
{
  struct _EH3_EXCEPTION_REGISTRATION *Next;
  PVOID ExceptionHandler;
  PSCOPETABLE_ENTRY ScopeTable;
  DWORD TryLevel;
};

/* 520 */
typedef struct _EH3_EXCEPTION_REGISTRATION EH3_EXCEPTION_REGISTRATION;

/* 521 */
typedef struct _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 522 */
struct CPPEH_RECORD
{
  DWORD old_esp;
  EXCEPTION_POINTERS *exc_ptr;
  struct _EH3_EXCEPTION_REGISTRATION registration;
};

/* 524 */
enum _HEAP_INFORMATION_CLASS
{
  HeapCompatibilityInformation = 0x0,
  HeapEnableTerminationOnCorruption = 0x1,
};

/* 523 */
typedef _HEAP_INFORMATION_CLASS HEAP_INFORMATION_CLASS;

